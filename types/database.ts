/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/projects": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.projects.id"];
          createdAt?: parameters["rowFilter.projects.createdAt"];
          thumbnail?: parameters["rowFilter.projects.thumbnail"];
          name?: parameters["rowFilter.projects.name"];
          description?: parameters["rowFilter.projects.description"];
          socialAccounts?: parameters["rowFilter.projects.socialAccounts"];
          blockchain?: parameters["rowFilter.projects.blockchain"];
          url?: parameters["rowFilter.projects.url"];
          socialMetrics?: parameters["rowFilter.projects.socialMetrics"];
          socialMetricsChanges?: parameters["rowFilter.projects.socialMetricsChanges"];
          discord?: parameters["rowFilter.projects.discord"];
          discordMembers?: parameters["rowFilter.projects.discordMembers"];
          facebook?: parameters["rowFilter.projects.facebook"];
          instagram?: parameters["rowFilter.projects.instagram"];
          kakao?: parameters["rowFilter.projects.kakao"];
          magiceden?: parameters["rowFilter.projects.magiceden"];
          opensea?: parameters["rowFilter.projects.opensea"];
          twitter?: parameters["rowFilter.projects.twitter"];
          twitterFollowers?: parameters["rowFilter.projects.twitterFollowers"];
          youtube?: parameters["rowFilter.projects.youtube"];
          discordMembersChange?: parameters["rowFilter.projects.discordMembersChange"];
          discordPresenseMembers?: parameters["rowFilter.projects.discordPresenseMembers"];
          discordPresenseMembersChange?: parameters["rowFilter.projects.discordPresenseMembersChange"];
          twitterFollowersChange?: parameters["rowFilter.projects.twitterFollowersChange"];
          user?: parameters["rowFilter.projects.user"];
          contactHref?: parameters["rowFilter.projects.contactHref"];
          partner?: parameters["rowFilter.projects.partner"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["projects"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** projects */
          projects?: definitions["projects"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.projects.id"];
          createdAt?: parameters["rowFilter.projects.createdAt"];
          thumbnail?: parameters["rowFilter.projects.thumbnail"];
          name?: parameters["rowFilter.projects.name"];
          description?: parameters["rowFilter.projects.description"];
          socialAccounts?: parameters["rowFilter.projects.socialAccounts"];
          blockchain?: parameters["rowFilter.projects.blockchain"];
          url?: parameters["rowFilter.projects.url"];
          socialMetrics?: parameters["rowFilter.projects.socialMetrics"];
          socialMetricsChanges?: parameters["rowFilter.projects.socialMetricsChanges"];
          discord?: parameters["rowFilter.projects.discord"];
          discordMembers?: parameters["rowFilter.projects.discordMembers"];
          facebook?: parameters["rowFilter.projects.facebook"];
          instagram?: parameters["rowFilter.projects.instagram"];
          kakao?: parameters["rowFilter.projects.kakao"];
          magiceden?: parameters["rowFilter.projects.magiceden"];
          opensea?: parameters["rowFilter.projects.opensea"];
          twitter?: parameters["rowFilter.projects.twitter"];
          twitterFollowers?: parameters["rowFilter.projects.twitterFollowers"];
          youtube?: parameters["rowFilter.projects.youtube"];
          discordMembersChange?: parameters["rowFilter.projects.discordMembersChange"];
          discordPresenseMembers?: parameters["rowFilter.projects.discordPresenseMembers"];
          discordPresenseMembersChange?: parameters["rowFilter.projects.discordPresenseMembersChange"];
          twitterFollowersChange?: parameters["rowFilter.projects.twitterFollowersChange"];
          user?: parameters["rowFilter.projects.user"];
          contactHref?: parameters["rowFilter.projects.contactHref"];
          partner?: parameters["rowFilter.projects.partner"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.projects.id"];
          createdAt?: parameters["rowFilter.projects.createdAt"];
          thumbnail?: parameters["rowFilter.projects.thumbnail"];
          name?: parameters["rowFilter.projects.name"];
          description?: parameters["rowFilter.projects.description"];
          socialAccounts?: parameters["rowFilter.projects.socialAccounts"];
          blockchain?: parameters["rowFilter.projects.blockchain"];
          url?: parameters["rowFilter.projects.url"];
          socialMetrics?: parameters["rowFilter.projects.socialMetrics"];
          socialMetricsChanges?: parameters["rowFilter.projects.socialMetricsChanges"];
          discord?: parameters["rowFilter.projects.discord"];
          discordMembers?: parameters["rowFilter.projects.discordMembers"];
          facebook?: parameters["rowFilter.projects.facebook"];
          instagram?: parameters["rowFilter.projects.instagram"];
          kakao?: parameters["rowFilter.projects.kakao"];
          magiceden?: parameters["rowFilter.projects.magiceden"];
          opensea?: parameters["rowFilter.projects.opensea"];
          twitter?: parameters["rowFilter.projects.twitter"];
          twitterFollowers?: parameters["rowFilter.projects.twitterFollowers"];
          youtube?: parameters["rowFilter.projects.youtube"];
          discordMembersChange?: parameters["rowFilter.projects.discordMembersChange"];
          discordPresenseMembers?: parameters["rowFilter.projects.discordPresenseMembers"];
          discordPresenseMembersChange?: parameters["rowFilter.projects.discordPresenseMembersChange"];
          twitterFollowersChange?: parameters["rowFilter.projects.twitterFollowersChange"];
          user?: parameters["rowFilter.projects.user"];
          contactHref?: parameters["rowFilter.projects.contactHref"];
          partner?: parameters["rowFilter.projects.partner"];
        };
        body: {
          /** projects */
          projects?: definitions["projects"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/twitterFriends": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.twitterFriends.id"];
          created_at?: parameters["rowFilter.twitterFriends.created_at"];
          user?: parameters["rowFilter.twitterFriends.user"];
          twitterFriendName?: parameters["rowFilter.twitterFriends.twitterFriendName"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["twitterFriends"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** twitterFriends */
          twitterFriends?: definitions["twitterFriends"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.twitterFriends.id"];
          created_at?: parameters["rowFilter.twitterFriends.created_at"];
          user?: parameters["rowFilter.twitterFriends.user"];
          twitterFriendName?: parameters["rowFilter.twitterFriends.twitterFriendName"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.twitterFriends.id"];
          created_at?: parameters["rowFilter.twitterFriends.created_at"];
          user?: parameters["rowFilter.twitterFriends.user"];
          twitterFriendName?: parameters["rowFilter.twitterFriends.twitterFriendName"];
        };
        body: {
          /** twitterFriends */
          twitterFriends?: definitions["twitterFriends"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/walletAddresses": {
    get: {
      parameters: {
        query: {
          user?: parameters["rowFilter.walletAddresses.user"];
          walletAddress?: parameters["rowFilter.walletAddresses.walletAddress"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["walletAddresses"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** walletAddresses */
          walletAddresses?: definitions["walletAddresses"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          user?: parameters["rowFilter.walletAddresses.user"];
          walletAddress?: parameters["rowFilter.walletAddresses.walletAddress"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          user?: parameters["rowFilter.walletAddresses.user"];
          walletAddress?: parameters["rowFilter.walletAddresses.walletAddress"];
        };
        body: {
          /** walletAddresses */
          walletAddresses?: definitions["walletAddresses"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/feedbacks": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.feedbacks.id"];
          text?: parameters["rowFilter.feedbacks.text"];
          created_at?: parameters["rowFilter.feedbacks.created_at"];
          profile?: parameters["rowFilter.feedbacks.profile"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["feedbacks"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** feedbacks */
          feedbacks?: definitions["feedbacks"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.feedbacks.id"];
          text?: parameters["rowFilter.feedbacks.text"];
          created_at?: parameters["rowFilter.feedbacks.created_at"];
          profile?: parameters["rowFilter.feedbacks.profile"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.feedbacks.id"];
          text?: parameters["rowFilter.feedbacks.text"];
          created_at?: parameters["rowFilter.feedbacks.created_at"];
          profile?: parameters["rowFilter.feedbacks.profile"];
        };
        body: {
          /** feedbacks */
          feedbacks?: definitions["feedbacks"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/wallets": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.wallets.id"];
          created_at?: parameters["rowFilter.wallets.created_at"];
          address?: parameters["rowFilter.wallets.address"];
          balance_eth?: parameters["rowFilter.wallets.balance_eth"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["wallets"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** wallets */
          wallets?: definitions["wallets"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.wallets.id"];
          created_at?: parameters["rowFilter.wallets.created_at"];
          address?: parameters["rowFilter.wallets.address"];
          balance_eth?: parameters["rowFilter.wallets.balance_eth"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.wallets.id"];
          created_at?: parameters["rowFilter.wallets.created_at"];
          address?: parameters["rowFilter.wallets.address"];
          balance_eth?: parameters["rowFilter.wallets.balance_eth"];
        };
        body: {
          /** wallets */
          wallets?: definitions["wallets"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/directus_presets": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_presets.id"];
          bookmark?: parameters["rowFilter.directus_presets.bookmark"];
          user?: parameters["rowFilter.directus_presets.user"];
          role?: parameters["rowFilter.directus_presets.role"];
          collection?: parameters["rowFilter.directus_presets.collection"];
          search?: parameters["rowFilter.directus_presets.search"];
          layout?: parameters["rowFilter.directus_presets.layout"];
          layout_query?: parameters["rowFilter.directus_presets.layout_query"];
          layout_options?: parameters["rowFilter.directus_presets.layout_options"];
          refresh_interval?: parameters["rowFilter.directus_presets.refresh_interval"];
          filter?: parameters["rowFilter.directus_presets.filter"];
          icon?: parameters["rowFilter.directus_presets.icon"];
          color?: parameters["rowFilter.directus_presets.color"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["directus_presets"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** directus_presets */
          directus_presets?: definitions["directus_presets"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_presets.id"];
          bookmark?: parameters["rowFilter.directus_presets.bookmark"];
          user?: parameters["rowFilter.directus_presets.user"];
          role?: parameters["rowFilter.directus_presets.role"];
          collection?: parameters["rowFilter.directus_presets.collection"];
          search?: parameters["rowFilter.directus_presets.search"];
          layout?: parameters["rowFilter.directus_presets.layout"];
          layout_query?: parameters["rowFilter.directus_presets.layout_query"];
          layout_options?: parameters["rowFilter.directus_presets.layout_options"];
          refresh_interval?: parameters["rowFilter.directus_presets.refresh_interval"];
          filter?: parameters["rowFilter.directus_presets.filter"];
          icon?: parameters["rowFilter.directus_presets.icon"];
          color?: parameters["rowFilter.directus_presets.color"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_presets.id"];
          bookmark?: parameters["rowFilter.directus_presets.bookmark"];
          user?: parameters["rowFilter.directus_presets.user"];
          role?: parameters["rowFilter.directus_presets.role"];
          collection?: parameters["rowFilter.directus_presets.collection"];
          search?: parameters["rowFilter.directus_presets.search"];
          layout?: parameters["rowFilter.directus_presets.layout"];
          layout_query?: parameters["rowFilter.directus_presets.layout_query"];
          layout_options?: parameters["rowFilter.directus_presets.layout_options"];
          refresh_interval?: parameters["rowFilter.directus_presets.refresh_interval"];
          filter?: parameters["rowFilter.directus_presets.filter"];
          icon?: parameters["rowFilter.directus_presets.icon"];
          color?: parameters["rowFilter.directus_presets.color"];
        };
        body: {
          /** directus_presets */
          directus_presets?: definitions["directus_presets"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/directus_revisions": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_revisions.id"];
          activity?: parameters["rowFilter.directus_revisions.activity"];
          collection?: parameters["rowFilter.directus_revisions.collection"];
          item?: parameters["rowFilter.directus_revisions.item"];
          data?: parameters["rowFilter.directus_revisions.data"];
          delta?: parameters["rowFilter.directus_revisions.delta"];
          parent?: parameters["rowFilter.directus_revisions.parent"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["directus_revisions"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** directus_revisions */
          directus_revisions?: definitions["directus_revisions"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_revisions.id"];
          activity?: parameters["rowFilter.directus_revisions.activity"];
          collection?: parameters["rowFilter.directus_revisions.collection"];
          item?: parameters["rowFilter.directus_revisions.item"];
          data?: parameters["rowFilter.directus_revisions.data"];
          delta?: parameters["rowFilter.directus_revisions.delta"];
          parent?: parameters["rowFilter.directus_revisions.parent"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_revisions.id"];
          activity?: parameters["rowFilter.directus_revisions.activity"];
          collection?: parameters["rowFilter.directus_revisions.collection"];
          item?: parameters["rowFilter.directus_revisions.item"];
          data?: parameters["rowFilter.directus_revisions.data"];
          delta?: parameters["rowFilter.directus_revisions.delta"];
          parent?: parameters["rowFilter.directus_revisions.parent"];
        };
        body: {
          /** directus_revisions */
          directus_revisions?: definitions["directus_revisions"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/influencers": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.influencers.id"];
          createdAt?: parameters["rowFilter.influencers.createdAt"];
          name?: parameters["rowFilter.influencers.name"];
          description?: parameters["rowFilter.influencers.description"];
          url?: parameters["rowFilter.influencers.url"];
          twitter?: parameters["rowFilter.influencers.twitter"];
          discord?: parameters["rowFilter.influencers.discord"];
          telegram?: parameters["rowFilter.influencers.telegram"];
          kakao?: parameters["rowFilter.influencers.kakao"];
          blog?: parameters["rowFilter.influencers.blog"];
          twitterFollowers?: parameters["rowFilter.influencers.twitterFollowers"];
          discordMembers?: parameters["rowFilter.influencers.discordMembers"];
          thumbnail?: parameters["rowFilter.influencers.thumbnail"];
          facebook?: parameters["rowFilter.influencers.facebook"];
          instagram?: parameters["rowFilter.influencers.instagram"];
          magiceden?: parameters["rowFilter.influencers.magiceden"];
          opensea?: parameters["rowFilter.influencers.opensea"];
          otherSocialAccounts?: parameters["rowFilter.influencers.otherSocialAccounts"];
          power?: parameters["rowFilter.influencers.power"];
          youtube?: parameters["rowFilter.influencers.youtube"];
          shortDescription?: parameters["rowFilter.influencers.shortDescription"];
          urlName?: parameters["rowFilter.influencers.urlName"];
          discordMembersChange?: parameters["rowFilter.influencers.discordMembersChange"];
          twitterFollowersChange?: parameters["rowFilter.influencers.twitterFollowersChange"];
          discordPresenseMembers?: parameters["rowFilter.influencers.discordPresenseMembers"];
          discordPresenseMembersChange?: parameters["rowFilter.influencers.discordPresenseMembersChange"];
          user?: parameters["rowFilter.influencers.user"];
          contactHref?: parameters["rowFilter.influencers.contactHref"];
          contactMail?: parameters["rowFilter.influencers.contactMail"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["influencers"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** influencers */
          influencers?: definitions["influencers"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.influencers.id"];
          createdAt?: parameters["rowFilter.influencers.createdAt"];
          name?: parameters["rowFilter.influencers.name"];
          description?: parameters["rowFilter.influencers.description"];
          url?: parameters["rowFilter.influencers.url"];
          twitter?: parameters["rowFilter.influencers.twitter"];
          discord?: parameters["rowFilter.influencers.discord"];
          telegram?: parameters["rowFilter.influencers.telegram"];
          kakao?: parameters["rowFilter.influencers.kakao"];
          blog?: parameters["rowFilter.influencers.blog"];
          twitterFollowers?: parameters["rowFilter.influencers.twitterFollowers"];
          discordMembers?: parameters["rowFilter.influencers.discordMembers"];
          thumbnail?: parameters["rowFilter.influencers.thumbnail"];
          facebook?: parameters["rowFilter.influencers.facebook"];
          instagram?: parameters["rowFilter.influencers.instagram"];
          magiceden?: parameters["rowFilter.influencers.magiceden"];
          opensea?: parameters["rowFilter.influencers.opensea"];
          otherSocialAccounts?: parameters["rowFilter.influencers.otherSocialAccounts"];
          power?: parameters["rowFilter.influencers.power"];
          youtube?: parameters["rowFilter.influencers.youtube"];
          shortDescription?: parameters["rowFilter.influencers.shortDescription"];
          urlName?: parameters["rowFilter.influencers.urlName"];
          discordMembersChange?: parameters["rowFilter.influencers.discordMembersChange"];
          twitterFollowersChange?: parameters["rowFilter.influencers.twitterFollowersChange"];
          discordPresenseMembers?: parameters["rowFilter.influencers.discordPresenseMembers"];
          discordPresenseMembersChange?: parameters["rowFilter.influencers.discordPresenseMembersChange"];
          user?: parameters["rowFilter.influencers.user"];
          contactHref?: parameters["rowFilter.influencers.contactHref"];
          contactMail?: parameters["rowFilter.influencers.contactMail"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.influencers.id"];
          createdAt?: parameters["rowFilter.influencers.createdAt"];
          name?: parameters["rowFilter.influencers.name"];
          description?: parameters["rowFilter.influencers.description"];
          url?: parameters["rowFilter.influencers.url"];
          twitter?: parameters["rowFilter.influencers.twitter"];
          discord?: parameters["rowFilter.influencers.discord"];
          telegram?: parameters["rowFilter.influencers.telegram"];
          kakao?: parameters["rowFilter.influencers.kakao"];
          blog?: parameters["rowFilter.influencers.blog"];
          twitterFollowers?: parameters["rowFilter.influencers.twitterFollowers"];
          discordMembers?: parameters["rowFilter.influencers.discordMembers"];
          thumbnail?: parameters["rowFilter.influencers.thumbnail"];
          facebook?: parameters["rowFilter.influencers.facebook"];
          instagram?: parameters["rowFilter.influencers.instagram"];
          magiceden?: parameters["rowFilter.influencers.magiceden"];
          opensea?: parameters["rowFilter.influencers.opensea"];
          otherSocialAccounts?: parameters["rowFilter.influencers.otherSocialAccounts"];
          power?: parameters["rowFilter.influencers.power"];
          youtube?: parameters["rowFilter.influencers.youtube"];
          shortDescription?: parameters["rowFilter.influencers.shortDescription"];
          urlName?: parameters["rowFilter.influencers.urlName"];
          discordMembersChange?: parameters["rowFilter.influencers.discordMembersChange"];
          twitterFollowersChange?: parameters["rowFilter.influencers.twitterFollowersChange"];
          discordPresenseMembers?: parameters["rowFilter.influencers.discordPresenseMembers"];
          discordPresenseMembersChange?: parameters["rowFilter.influencers.discordPresenseMembersChange"];
          user?: parameters["rowFilter.influencers.user"];
          contactHref?: parameters["rowFilter.influencers.contactHref"];
          contactMail?: parameters["rowFilter.influencers.contactMail"];
        };
        body: {
          /** influencers */
          influencers?: definitions["influencers"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/directus_roles": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_roles.id"];
          name?: parameters["rowFilter.directus_roles.name"];
          icon?: parameters["rowFilter.directus_roles.icon"];
          description?: parameters["rowFilter.directus_roles.description"];
          ip_access?: parameters["rowFilter.directus_roles.ip_access"];
          enforce_tfa?: parameters["rowFilter.directus_roles.enforce_tfa"];
          admin_access?: parameters["rowFilter.directus_roles.admin_access"];
          app_access?: parameters["rowFilter.directus_roles.app_access"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["directus_roles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** directus_roles */
          directus_roles?: definitions["directus_roles"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_roles.id"];
          name?: parameters["rowFilter.directus_roles.name"];
          icon?: parameters["rowFilter.directus_roles.icon"];
          description?: parameters["rowFilter.directus_roles.description"];
          ip_access?: parameters["rowFilter.directus_roles.ip_access"];
          enforce_tfa?: parameters["rowFilter.directus_roles.enforce_tfa"];
          admin_access?: parameters["rowFilter.directus_roles.admin_access"];
          app_access?: parameters["rowFilter.directus_roles.app_access"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_roles.id"];
          name?: parameters["rowFilter.directus_roles.name"];
          icon?: parameters["rowFilter.directus_roles.icon"];
          description?: parameters["rowFilter.directus_roles.description"];
          ip_access?: parameters["rowFilter.directus_roles.ip_access"];
          enforce_tfa?: parameters["rowFilter.directus_roles.enforce_tfa"];
          admin_access?: parameters["rowFilter.directus_roles.admin_access"];
          app_access?: parameters["rowFilter.directus_roles.app_access"];
        };
        body: {
          /** directus_roles */
          directus_roles?: definitions["directus_roles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/raffleConditionLogHistories": {
    get: {
      parameters: {
        query: {
          user?: parameters["rowFilter.raffleConditionLogHistories.user"];
          raffle?: parameters["rowFilter.raffleConditionLogHistories.raffle"];
          type?: parameters["rowFilter.raffleConditionLogHistories.type"];
          value?: parameters["rowFilter.raffleConditionLogHistories.value"];
          isDone?: parameters["rowFilter.raffleConditionLogHistories.isDone"];
          created_at?: parameters["rowFilter.raffleConditionLogHistories.created_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["raffleConditionLogHistories"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** raffleConditionLogHistories */
          raffleConditionLogHistories?: definitions["raffleConditionLogHistories"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          user?: parameters["rowFilter.raffleConditionLogHistories.user"];
          raffle?: parameters["rowFilter.raffleConditionLogHistories.raffle"];
          type?: parameters["rowFilter.raffleConditionLogHistories.type"];
          value?: parameters["rowFilter.raffleConditionLogHistories.value"];
          isDone?: parameters["rowFilter.raffleConditionLogHistories.isDone"];
          created_at?: parameters["rowFilter.raffleConditionLogHistories.created_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          user?: parameters["rowFilter.raffleConditionLogHistories.user"];
          raffle?: parameters["rowFilter.raffleConditionLogHistories.raffle"];
          type?: parameters["rowFilter.raffleConditionLogHistories.type"];
          value?: parameters["rowFilter.raffleConditionLogHistories.value"];
          isDone?: parameters["rowFilter.raffleConditionLogHistories.isDone"];
          created_at?: parameters["rowFilter.raffleConditionLogHistories.created_at"];
        };
        body: {
          /** raffleConditionLogHistories */
          raffleConditionLogHistories?: definitions["raffleConditionLogHistories"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/subscriptions": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.subscriptions.id"];
          createdAt?: parameters["rowFilter.subscriptions.createdAt"];
          project?: parameters["rowFilter.subscriptions.project"];
          raffle?: parameters["rowFilter.subscriptions.raffle"];
          sent?: parameters["rowFilter.subscriptions.sent"];
          profile?: parameters["rowFilter.subscriptions.profile"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["subscriptions"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** subscriptions */
          subscriptions?: definitions["subscriptions"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.subscriptions.id"];
          createdAt?: parameters["rowFilter.subscriptions.createdAt"];
          project?: parameters["rowFilter.subscriptions.project"];
          raffle?: parameters["rowFilter.subscriptions.raffle"];
          sent?: parameters["rowFilter.subscriptions.sent"];
          profile?: parameters["rowFilter.subscriptions.profile"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.subscriptions.id"];
          createdAt?: parameters["rowFilter.subscriptions.createdAt"];
          project?: parameters["rowFilter.subscriptions.project"];
          raffle?: parameters["rowFilter.subscriptions.raffle"];
          sent?: parameters["rowFilter.subscriptions.sent"];
          profile?: parameters["rowFilter.subscriptions.profile"];
        };
        body: {
          /** subscriptions */
          subscriptions?: definitions["subscriptions"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/directus_sessions": {
    get: {
      parameters: {
        query: {
          token?: parameters["rowFilter.directus_sessions.token"];
          user?: parameters["rowFilter.directus_sessions.user"];
          expires?: parameters["rowFilter.directus_sessions.expires"];
          ip?: parameters["rowFilter.directus_sessions.ip"];
          user_agent?: parameters["rowFilter.directus_sessions.user_agent"];
          share?: parameters["rowFilter.directus_sessions.share"];
          origin?: parameters["rowFilter.directus_sessions.origin"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["directus_sessions"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** directus_sessions */
          directus_sessions?: definitions["directus_sessions"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          token?: parameters["rowFilter.directus_sessions.token"];
          user?: parameters["rowFilter.directus_sessions.user"];
          expires?: parameters["rowFilter.directus_sessions.expires"];
          ip?: parameters["rowFilter.directus_sessions.ip"];
          user_agent?: parameters["rowFilter.directus_sessions.user_agent"];
          share?: parameters["rowFilter.directus_sessions.share"];
          origin?: parameters["rowFilter.directus_sessions.origin"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          token?: parameters["rowFilter.directus_sessions.token"];
          user?: parameters["rowFilter.directus_sessions.user"];
          expires?: parameters["rowFilter.directus_sessions.expires"];
          ip?: parameters["rowFilter.directus_sessions.ip"];
          user_agent?: parameters["rowFilter.directus_sessions.user_agent"];
          share?: parameters["rowFilter.directus_sessions.share"];
          origin?: parameters["rowFilter.directus_sessions.origin"];
        };
        body: {
          /** directus_sessions */
          directus_sessions?: definitions["directus_sessions"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/directus_migrations": {
    get: {
      parameters: {
        query: {
          version?: parameters["rowFilter.directus_migrations.version"];
          name?: parameters["rowFilter.directus_migrations.name"];
          timestamp?: parameters["rowFilter.directus_migrations.timestamp"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["directus_migrations"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** directus_migrations */
          directus_migrations?: definitions["directus_migrations"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          version?: parameters["rowFilter.directus_migrations.version"];
          name?: parameters["rowFilter.directus_migrations.name"];
          timestamp?: parameters["rowFilter.directus_migrations.timestamp"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          version?: parameters["rowFilter.directus_migrations.version"];
          name?: parameters["rowFilter.directus_migrations.name"];
          timestamp?: parameters["rowFilter.directus_migrations.timestamp"];
        };
        body: {
          /** directus_migrations */
          directus_migrations?: definitions["directus_migrations"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/raffles_with_entries": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.raffles_with_entries.id"];
          project?: parameters["rowFilter.raffles_with_entries.project"];
          name?: parameters["rowFilter.raffles_with_entries.name"];
          thumbnail?: parameters["rowFilter.raffles_with_entries.thumbnail"];
          rewards?: parameters["rowFilter.raffles_with_entries.rewards"];
          conditions?: parameters["rowFilter.raffles_with_entries.conditions"];
          results?: parameters["rowFilter.raffles_with_entries.results"];
          url?: parameters["rowFilter.raffles_with_entries.url"];
          openDatetime?: parameters["rowFilter.raffles_with_entries.openDatetime"];
          closeDatetime?: parameters["rowFilter.raffles_with_entries.closeDatetime"];
          createdAt?: parameters["rowFilter.raffles_with_entries.createdAt"];
          vender?: parameters["rowFilter.raffles_with_entries.vender"];
          isRaffleOriginal?: parameters["rowFilter.raffles_with_entries.isRaffleOriginal"];
          isEnded?: parameters["rowFilter.raffles_with_entries.isEnded"];
          description?: parameters["rowFilter.raffles_with_entries.description"];
          type?: parameters["rowFilter.raffles_with_entries.type"];
          duration?: parameters["rowFilter.raffles_with_entries.duration"];
          influencer?: parameters["rowFilter.raffles_with_entries.influencer"];
          tweetUrl?: parameters["rowFilter.raffles_with_entries.tweetUrl"];
          getTelegramName?: parameters["rowFilter.raffles_with_entries.getTelegramName"];
          getTwitterName?: parameters["rowFilter.raffles_with_entries.getTwitterName"];
          getDiscordName?: parameters["rowFilter.raffles_with_entries.getDiscordName"];
          getWalletAddress?: parameters["rowFilter.raffles_with_entries.getWalletAddress"];
          others?: parameters["rowFilter.raffles_with_entries.others"];
          resultContent?: parameters["rowFilter.raffles_with_entries.resultContent"];
          isPublished?: parameters["rowFilter.raffles_with_entries.isPublished"];
          showGetDiscordName?: parameters["rowFilter.raffles_with_entries.showGetDiscordName"];
          showGetTelegramName?: parameters["rowFilter.raffles_with_entries.showGetTelegramName"];
          showGetTwitterName?: parameters["rowFilter.raffles_with_entries.showGetTwitterName"];
          showGetWalletAddress?: parameters["rowFilter.raffles_with_entries.showGetWalletAddress"];
          walletType?: parameters["rowFilter.raffles_with_entries.walletType"];
          additionalForms?: parameters["rowFilter.raffles_with_entries.additionalForms"];
          submitDescription?: parameters["rowFilter.raffles_with_entries.submitDescription"];
          isDescriptionHtml?: parameters["rowFilter.raffles_with_entries.isDescriptionHtml"];
          description_ko?: parameters["rowFilter.raffles_with_entries.description_ko"];
          tweetMedia?: parameters["rowFilter.raffles_with_entries.tweetMedia"];
          isTest?: parameters["rowFilter.raffles_with_entries.isTest"];
          savedTweet?: parameters["rowFilter.raffles_with_entries.savedTweet"];
          reservedTweetDatetime?: parameters["rowFilter.raffles_with_entries.reservedTweetDatetime"];
          tweetPublished?: parameters["rowFilter.raffles_with_entries.tweetPublished"];
          submitDescription_ko?: parameters["rowFilter.raffles_with_entries.submitDescription_ko"];
          resultContent_ko?: parameters["rowFilter.raffles_with_entries.resultContent_ko"];
          name_ko?: parameters["rowFilter.raffles_with_entries.name_ko"];
          isDeleted?: parameters["rowFilter.raffles_with_entries.isDeleted"];
          numOfEntries?: parameters["rowFilter.raffles_with_entries.numOfEntries"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["raffles_with_entries"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/directus_permissions": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_permissions.id"];
          role?: parameters["rowFilter.directus_permissions.role"];
          collection?: parameters["rowFilter.directus_permissions.collection"];
          action?: parameters["rowFilter.directus_permissions.action"];
          permissions?: parameters["rowFilter.directus_permissions.permissions"];
          validation?: parameters["rowFilter.directus_permissions.validation"];
          presets?: parameters["rowFilter.directus_permissions.presets"];
          fields?: parameters["rowFilter.directus_permissions.fields"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["directus_permissions"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** directus_permissions */
          directus_permissions?: definitions["directus_permissions"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_permissions.id"];
          role?: parameters["rowFilter.directus_permissions.role"];
          collection?: parameters["rowFilter.directus_permissions.collection"];
          action?: parameters["rowFilter.directus_permissions.action"];
          permissions?: parameters["rowFilter.directus_permissions.permissions"];
          validation?: parameters["rowFilter.directus_permissions.validation"];
          presets?: parameters["rowFilter.directus_permissions.presets"];
          fields?: parameters["rowFilter.directus_permissions.fields"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_permissions.id"];
          role?: parameters["rowFilter.directus_permissions.role"];
          collection?: parameters["rowFilter.directus_permissions.collection"];
          action?: parameters["rowFilter.directus_permissions.action"];
          permissions?: parameters["rowFilter.directus_permissions.permissions"];
          validation?: parameters["rowFilter.directus_permissions.validation"];
          presets?: parameters["rowFilter.directus_permissions.presets"];
          fields?: parameters["rowFilter.directus_permissions.fields"];
        };
        body: {
          /** directus_permissions */
          directus_permissions?: definitions["directus_permissions"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/directus_flows": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_flows.id"];
          name?: parameters["rowFilter.directus_flows.name"];
          icon?: parameters["rowFilter.directus_flows.icon"];
          color?: parameters["rowFilter.directus_flows.color"];
          description?: parameters["rowFilter.directus_flows.description"];
          status?: parameters["rowFilter.directus_flows.status"];
          trigger?: parameters["rowFilter.directus_flows.trigger"];
          accountability?: parameters["rowFilter.directus_flows.accountability"];
          options?: parameters["rowFilter.directus_flows.options"];
          operation?: parameters["rowFilter.directus_flows.operation"];
          date_created?: parameters["rowFilter.directus_flows.date_created"];
          user_created?: parameters["rowFilter.directus_flows.user_created"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["directus_flows"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** directus_flows */
          directus_flows?: definitions["directus_flows"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_flows.id"];
          name?: parameters["rowFilter.directus_flows.name"];
          icon?: parameters["rowFilter.directus_flows.icon"];
          color?: parameters["rowFilter.directus_flows.color"];
          description?: parameters["rowFilter.directus_flows.description"];
          status?: parameters["rowFilter.directus_flows.status"];
          trigger?: parameters["rowFilter.directus_flows.trigger"];
          accountability?: parameters["rowFilter.directus_flows.accountability"];
          options?: parameters["rowFilter.directus_flows.options"];
          operation?: parameters["rowFilter.directus_flows.operation"];
          date_created?: parameters["rowFilter.directus_flows.date_created"];
          user_created?: parameters["rowFilter.directus_flows.user_created"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_flows.id"];
          name?: parameters["rowFilter.directus_flows.name"];
          icon?: parameters["rowFilter.directus_flows.icon"];
          color?: parameters["rowFilter.directus_flows.color"];
          description?: parameters["rowFilter.directus_flows.description"];
          status?: parameters["rowFilter.directus_flows.status"];
          trigger?: parameters["rowFilter.directus_flows.trigger"];
          accountability?: parameters["rowFilter.directus_flows.accountability"];
          options?: parameters["rowFilter.directus_flows.options"];
          operation?: parameters["rowFilter.directus_flows.operation"];
          date_created?: parameters["rowFilter.directus_flows.date_created"];
          user_created?: parameters["rowFilter.directus_flows.user_created"];
        };
        body: {
          /** directus_flows */
          directus_flows?: definitions["directus_flows"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/metricHistories": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.metricHistories.id"];
          project?: parameters["rowFilter.metricHistories.project"];
          twitterFollowers?: parameters["rowFilter.metricHistories.twitterFollowers"];
          discordMembers?: parameters["rowFilter.metricHistories.discordMembers"];
          datetime?: parameters["rowFilter.metricHistories.datetime"];
          discordPresenseMembers?: parameters["rowFilter.metricHistories.discordPresenseMembers"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["metricHistories"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** metricHistories */
          metricHistories?: definitions["metricHistories"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.metricHistories.id"];
          project?: parameters["rowFilter.metricHistories.project"];
          twitterFollowers?: parameters["rowFilter.metricHistories.twitterFollowers"];
          discordMembers?: parameters["rowFilter.metricHistories.discordMembers"];
          datetime?: parameters["rowFilter.metricHistories.datetime"];
          discordPresenseMembers?: parameters["rowFilter.metricHistories.discordPresenseMembers"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.metricHistories.id"];
          project?: parameters["rowFilter.metricHistories.project"];
          twitterFollowers?: parameters["rowFilter.metricHistories.twitterFollowers"];
          discordMembers?: parameters["rowFilter.metricHistories.discordMembers"];
          datetime?: parameters["rowFilter.metricHistories.datetime"];
          discordPresenseMembers?: parameters["rowFilter.metricHistories.discordPresenseMembers"];
        };
        body: {
          /** metricHistories */
          metricHistories?: definitions["metricHistories"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/raffleParticipations": {
    get: {
      parameters: {
        query: {
          user?: parameters["rowFilter.raffleParticipations.user"];
          raffle?: parameters["rowFilter.raffleParticipations.raffle"];
          created_at?: parameters["rowFilter.raffleParticipations.created_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["raffleParticipations"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** raffleParticipations */
          raffleParticipations?: definitions["raffleParticipations"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          user?: parameters["rowFilter.raffleParticipations.user"];
          raffle?: parameters["rowFilter.raffleParticipations.raffle"];
          created_at?: parameters["rowFilter.raffleParticipations.created_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          user?: parameters["rowFilter.raffleParticipations.user"];
          raffle?: parameters["rowFilter.raffleParticipations.raffle"];
          created_at?: parameters["rowFilter.raffleParticipations.created_at"];
        };
        body: {
          /** raffleParticipations */
          raffleParticipations?: definitions["raffleParticipations"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/directus_fields": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_fields.id"];
          collection?: parameters["rowFilter.directus_fields.collection"];
          field?: parameters["rowFilter.directus_fields.field"];
          special?: parameters["rowFilter.directus_fields.special"];
          interface?: parameters["rowFilter.directus_fields.interface"];
          options?: parameters["rowFilter.directus_fields.options"];
          display?: parameters["rowFilter.directus_fields.display"];
          display_options?: parameters["rowFilter.directus_fields.display_options"];
          readonly?: parameters["rowFilter.directus_fields.readonly"];
          hidden?: parameters["rowFilter.directus_fields.hidden"];
          sort?: parameters["rowFilter.directus_fields.sort"];
          width?: parameters["rowFilter.directus_fields.width"];
          translations?: parameters["rowFilter.directus_fields.translations"];
          note?: parameters["rowFilter.directus_fields.note"];
          conditions?: parameters["rowFilter.directus_fields.conditions"];
          required?: parameters["rowFilter.directus_fields.required"];
          group?: parameters["rowFilter.directus_fields.group"];
          validation?: parameters["rowFilter.directus_fields.validation"];
          validation_message?: parameters["rowFilter.directus_fields.validation_message"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["directus_fields"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** directus_fields */
          directus_fields?: definitions["directus_fields"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_fields.id"];
          collection?: parameters["rowFilter.directus_fields.collection"];
          field?: parameters["rowFilter.directus_fields.field"];
          special?: parameters["rowFilter.directus_fields.special"];
          interface?: parameters["rowFilter.directus_fields.interface"];
          options?: parameters["rowFilter.directus_fields.options"];
          display?: parameters["rowFilter.directus_fields.display"];
          display_options?: parameters["rowFilter.directus_fields.display_options"];
          readonly?: parameters["rowFilter.directus_fields.readonly"];
          hidden?: parameters["rowFilter.directus_fields.hidden"];
          sort?: parameters["rowFilter.directus_fields.sort"];
          width?: parameters["rowFilter.directus_fields.width"];
          translations?: parameters["rowFilter.directus_fields.translations"];
          note?: parameters["rowFilter.directus_fields.note"];
          conditions?: parameters["rowFilter.directus_fields.conditions"];
          required?: parameters["rowFilter.directus_fields.required"];
          group?: parameters["rowFilter.directus_fields.group"];
          validation?: parameters["rowFilter.directus_fields.validation"];
          validation_message?: parameters["rowFilter.directus_fields.validation_message"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_fields.id"];
          collection?: parameters["rowFilter.directus_fields.collection"];
          field?: parameters["rowFilter.directus_fields.field"];
          special?: parameters["rowFilter.directus_fields.special"];
          interface?: parameters["rowFilter.directus_fields.interface"];
          options?: parameters["rowFilter.directus_fields.options"];
          display?: parameters["rowFilter.directus_fields.display"];
          display_options?: parameters["rowFilter.directus_fields.display_options"];
          readonly?: parameters["rowFilter.directus_fields.readonly"];
          hidden?: parameters["rowFilter.directus_fields.hidden"];
          sort?: parameters["rowFilter.directus_fields.sort"];
          width?: parameters["rowFilter.directus_fields.width"];
          translations?: parameters["rowFilter.directus_fields.translations"];
          note?: parameters["rowFilter.directus_fields.note"];
          conditions?: parameters["rowFilter.directus_fields.conditions"];
          required?: parameters["rowFilter.directus_fields.required"];
          group?: parameters["rowFilter.directus_fields.group"];
          validation?: parameters["rowFilter.directus_fields.validation"];
          validation_message?: parameters["rowFilter.directus_fields.validation_message"];
        };
        body: {
          /** directus_fields */
          directus_fields?: definitions["directus_fields"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/twitterTokenV1": {
    get: {
      parameters: {
        query: {
          user_id?: parameters["rowFilter.twitterTokenV1.user_id"];
          influencer_id?: parameters["rowFilter.twitterTokenV1.influencer_id"];
          token?: parameters["rowFilter.twitterTokenV1.token"];
          secret?: parameters["rowFilter.twitterTokenV1.secret"];
          twitterId?: parameters["rowFilter.twitterTokenV1.twitterId"];
          twitterName?: parameters["rowFilter.twitterTokenV1.twitterName"];
          twitterUsername?: parameters["rowFilter.twitterTokenV1.twitterUsername"];
          twitterThumbnail?: parameters["rowFilter.twitterTokenV1.twitterThumbnail"];
          createdAt?: parameters["rowFilter.twitterTokenV1.createdAt"];
          hourLimit?: parameters["rowFilter.twitterTokenV1.hourLimit"];
          lastVisited?: parameters["rowFilter.twitterTokenV1.lastVisited"];
          id?: parameters["rowFilter.twitterTokenV1.id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["twitterTokenV1"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** twitterTokenV1 */
          twitterTokenV1?: definitions["twitterTokenV1"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          user_id?: parameters["rowFilter.twitterTokenV1.user_id"];
          influencer_id?: parameters["rowFilter.twitterTokenV1.influencer_id"];
          token?: parameters["rowFilter.twitterTokenV1.token"];
          secret?: parameters["rowFilter.twitterTokenV1.secret"];
          twitterId?: parameters["rowFilter.twitterTokenV1.twitterId"];
          twitterName?: parameters["rowFilter.twitterTokenV1.twitterName"];
          twitterUsername?: parameters["rowFilter.twitterTokenV1.twitterUsername"];
          twitterThumbnail?: parameters["rowFilter.twitterTokenV1.twitterThumbnail"];
          createdAt?: parameters["rowFilter.twitterTokenV1.createdAt"];
          hourLimit?: parameters["rowFilter.twitterTokenV1.hourLimit"];
          lastVisited?: parameters["rowFilter.twitterTokenV1.lastVisited"];
          id?: parameters["rowFilter.twitterTokenV1.id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          user_id?: parameters["rowFilter.twitterTokenV1.user_id"];
          influencer_id?: parameters["rowFilter.twitterTokenV1.influencer_id"];
          token?: parameters["rowFilter.twitterTokenV1.token"];
          secret?: parameters["rowFilter.twitterTokenV1.secret"];
          twitterId?: parameters["rowFilter.twitterTokenV1.twitterId"];
          twitterName?: parameters["rowFilter.twitterTokenV1.twitterName"];
          twitterUsername?: parameters["rowFilter.twitterTokenV1.twitterUsername"];
          twitterThumbnail?: parameters["rowFilter.twitterTokenV1.twitterThumbnail"];
          createdAt?: parameters["rowFilter.twitterTokenV1.createdAt"];
          hourLimit?: parameters["rowFilter.twitterTokenV1.hourLimit"];
          lastVisited?: parameters["rowFilter.twitterTokenV1.lastVisited"];
          id?: parameters["rowFilter.twitterTokenV1.id"];
        };
        body: {
          /** twitterTokenV1 */
          twitterTokenV1?: definitions["twitterTokenV1"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/raffleEntries": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.raffleEntries.id"];
          user?: parameters["rowFilter.raffleEntries.user"];
          created_at?: parameters["rowFilter.raffleEntries.created_at"];
          raffle?: parameters["rowFilter.raffleEntries.raffle"];
          twitterName?: parameters["rowFilter.raffleEntries.twitterName"];
          walletAddress?: parameters["rowFilter.raffleEntries.walletAddress"];
          discordName?: parameters["rowFilter.raffleEntries.discordName"];
          telegramName?: parameters["rowFilter.raffleEntries.telegramName"];
          isWinner?: parameters["rowFilter.raffleEntries.isWinner"];
          invalidated?: parameters["rowFilter.raffleEntries.invalidated"];
          status?: parameters["rowFilter.raffleEntries.status"];
          additionalForms?: parameters["rowFilter.raffleEntries.additionalForms"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["raffleEntries"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** raffleEntries */
          raffleEntries?: definitions["raffleEntries"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.raffleEntries.id"];
          user?: parameters["rowFilter.raffleEntries.user"];
          created_at?: parameters["rowFilter.raffleEntries.created_at"];
          raffle?: parameters["rowFilter.raffleEntries.raffle"];
          twitterName?: parameters["rowFilter.raffleEntries.twitterName"];
          walletAddress?: parameters["rowFilter.raffleEntries.walletAddress"];
          discordName?: parameters["rowFilter.raffleEntries.discordName"];
          telegramName?: parameters["rowFilter.raffleEntries.telegramName"];
          isWinner?: parameters["rowFilter.raffleEntries.isWinner"];
          invalidated?: parameters["rowFilter.raffleEntries.invalidated"];
          status?: parameters["rowFilter.raffleEntries.status"];
          additionalForms?: parameters["rowFilter.raffleEntries.additionalForms"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.raffleEntries.id"];
          user?: parameters["rowFilter.raffleEntries.user"];
          created_at?: parameters["rowFilter.raffleEntries.created_at"];
          raffle?: parameters["rowFilter.raffleEntries.raffle"];
          twitterName?: parameters["rowFilter.raffleEntries.twitterName"];
          walletAddress?: parameters["rowFilter.raffleEntries.walletAddress"];
          discordName?: parameters["rowFilter.raffleEntries.discordName"];
          telegramName?: parameters["rowFilter.raffleEntries.telegramName"];
          isWinner?: parameters["rowFilter.raffleEntries.isWinner"];
          invalidated?: parameters["rowFilter.raffleEntries.invalidated"];
          status?: parameters["rowFilter.raffleEntries.status"];
          additionalForms?: parameters["rowFilter.raffleEntries.additionalForms"];
        };
        body: {
          /** raffleEntries */
          raffleEntries?: definitions["raffleEntries"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/directus_shares": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_shares.id"];
          name?: parameters["rowFilter.directus_shares.name"];
          collection?: parameters["rowFilter.directus_shares.collection"];
          item?: parameters["rowFilter.directus_shares.item"];
          role?: parameters["rowFilter.directus_shares.role"];
          password?: parameters["rowFilter.directus_shares.password"];
          user_created?: parameters["rowFilter.directus_shares.user_created"];
          date_created?: parameters["rowFilter.directus_shares.date_created"];
          date_start?: parameters["rowFilter.directus_shares.date_start"];
          date_end?: parameters["rowFilter.directus_shares.date_end"];
          times_used?: parameters["rowFilter.directus_shares.times_used"];
          max_uses?: parameters["rowFilter.directus_shares.max_uses"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["directus_shares"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** directus_shares */
          directus_shares?: definitions["directus_shares"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_shares.id"];
          name?: parameters["rowFilter.directus_shares.name"];
          collection?: parameters["rowFilter.directus_shares.collection"];
          item?: parameters["rowFilter.directus_shares.item"];
          role?: parameters["rowFilter.directus_shares.role"];
          password?: parameters["rowFilter.directus_shares.password"];
          user_created?: parameters["rowFilter.directus_shares.user_created"];
          date_created?: parameters["rowFilter.directus_shares.date_created"];
          date_start?: parameters["rowFilter.directus_shares.date_start"];
          date_end?: parameters["rowFilter.directus_shares.date_end"];
          times_used?: parameters["rowFilter.directus_shares.times_used"];
          max_uses?: parameters["rowFilter.directus_shares.max_uses"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_shares.id"];
          name?: parameters["rowFilter.directus_shares.name"];
          collection?: parameters["rowFilter.directus_shares.collection"];
          item?: parameters["rowFilter.directus_shares.item"];
          role?: parameters["rowFilter.directus_shares.role"];
          password?: parameters["rowFilter.directus_shares.password"];
          user_created?: parameters["rowFilter.directus_shares.user_created"];
          date_created?: parameters["rowFilter.directus_shares.date_created"];
          date_start?: parameters["rowFilter.directus_shares.date_start"];
          date_end?: parameters["rowFilter.directus_shares.date_end"];
          times_used?: parameters["rowFilter.directus_shares.times_used"];
          max_uses?: parameters["rowFilter.directus_shares.max_uses"];
        };
        body: {
          /** directus_shares */
          directus_shares?: definitions["directus_shares"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/directus_webhooks": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_webhooks.id"];
          name?: parameters["rowFilter.directus_webhooks.name"];
          method?: parameters["rowFilter.directus_webhooks.method"];
          url?: parameters["rowFilter.directus_webhooks.url"];
          status?: parameters["rowFilter.directus_webhooks.status"];
          data?: parameters["rowFilter.directus_webhooks.data"];
          actions?: parameters["rowFilter.directus_webhooks.actions"];
          collections?: parameters["rowFilter.directus_webhooks.collections"];
          headers?: parameters["rowFilter.directus_webhooks.headers"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["directus_webhooks"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** directus_webhooks */
          directus_webhooks?: definitions["directus_webhooks"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_webhooks.id"];
          name?: parameters["rowFilter.directus_webhooks.name"];
          method?: parameters["rowFilter.directus_webhooks.method"];
          url?: parameters["rowFilter.directus_webhooks.url"];
          status?: parameters["rowFilter.directus_webhooks.status"];
          data?: parameters["rowFilter.directus_webhooks.data"];
          actions?: parameters["rowFilter.directus_webhooks.actions"];
          collections?: parameters["rowFilter.directus_webhooks.collections"];
          headers?: parameters["rowFilter.directus_webhooks.headers"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_webhooks.id"];
          name?: parameters["rowFilter.directus_webhooks.name"];
          method?: parameters["rowFilter.directus_webhooks.method"];
          url?: parameters["rowFilter.directus_webhooks.url"];
          status?: parameters["rowFilter.directus_webhooks.status"];
          data?: parameters["rowFilter.directus_webhooks.data"];
          actions?: parameters["rowFilter.directus_webhooks.actions"];
          collections?: parameters["rowFilter.directus_webhooks.collections"];
          headers?: parameters["rowFilter.directus_webhooks.headers"];
        };
        body: {
          /** directus_webhooks */
          directus_webhooks?: definitions["directus_webhooks"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/directus_settings": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_settings.id"];
          project_name?: parameters["rowFilter.directus_settings.project_name"];
          project_url?: parameters["rowFilter.directus_settings.project_url"];
          project_color?: parameters["rowFilter.directus_settings.project_color"];
          project_logo?: parameters["rowFilter.directus_settings.project_logo"];
          public_foreground?: parameters["rowFilter.directus_settings.public_foreground"];
          public_background?: parameters["rowFilter.directus_settings.public_background"];
          public_note?: parameters["rowFilter.directus_settings.public_note"];
          auth_login_attempts?: parameters["rowFilter.directus_settings.auth_login_attempts"];
          auth_password_policy?: parameters["rowFilter.directus_settings.auth_password_policy"];
          storage_asset_transform?: parameters["rowFilter.directus_settings.storage_asset_transform"];
          storage_asset_presets?: parameters["rowFilter.directus_settings.storage_asset_presets"];
          custom_css?: parameters["rowFilter.directus_settings.custom_css"];
          storage_default_folder?: parameters["rowFilter.directus_settings.storage_default_folder"];
          basemaps?: parameters["rowFilter.directus_settings.basemaps"];
          mapbox_key?: parameters["rowFilter.directus_settings.mapbox_key"];
          module_bar?: parameters["rowFilter.directus_settings.module_bar"];
          project_descriptor?: parameters["rowFilter.directus_settings.project_descriptor"];
          translation_strings?: parameters["rowFilter.directus_settings.translation_strings"];
          default_language?: parameters["rowFilter.directus_settings.default_language"];
          custom_aspect_ratios?: parameters["rowFilter.directus_settings.custom_aspect_ratios"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["directus_settings"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** directus_settings */
          directus_settings?: definitions["directus_settings"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_settings.id"];
          project_name?: parameters["rowFilter.directus_settings.project_name"];
          project_url?: parameters["rowFilter.directus_settings.project_url"];
          project_color?: parameters["rowFilter.directus_settings.project_color"];
          project_logo?: parameters["rowFilter.directus_settings.project_logo"];
          public_foreground?: parameters["rowFilter.directus_settings.public_foreground"];
          public_background?: parameters["rowFilter.directus_settings.public_background"];
          public_note?: parameters["rowFilter.directus_settings.public_note"];
          auth_login_attempts?: parameters["rowFilter.directus_settings.auth_login_attempts"];
          auth_password_policy?: parameters["rowFilter.directus_settings.auth_password_policy"];
          storage_asset_transform?: parameters["rowFilter.directus_settings.storage_asset_transform"];
          storage_asset_presets?: parameters["rowFilter.directus_settings.storage_asset_presets"];
          custom_css?: parameters["rowFilter.directus_settings.custom_css"];
          storage_default_folder?: parameters["rowFilter.directus_settings.storage_default_folder"];
          basemaps?: parameters["rowFilter.directus_settings.basemaps"];
          mapbox_key?: parameters["rowFilter.directus_settings.mapbox_key"];
          module_bar?: parameters["rowFilter.directus_settings.module_bar"];
          project_descriptor?: parameters["rowFilter.directus_settings.project_descriptor"];
          translation_strings?: parameters["rowFilter.directus_settings.translation_strings"];
          default_language?: parameters["rowFilter.directus_settings.default_language"];
          custom_aspect_ratios?: parameters["rowFilter.directus_settings.custom_aspect_ratios"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_settings.id"];
          project_name?: parameters["rowFilter.directus_settings.project_name"];
          project_url?: parameters["rowFilter.directus_settings.project_url"];
          project_color?: parameters["rowFilter.directus_settings.project_color"];
          project_logo?: parameters["rowFilter.directus_settings.project_logo"];
          public_foreground?: parameters["rowFilter.directus_settings.public_foreground"];
          public_background?: parameters["rowFilter.directus_settings.public_background"];
          public_note?: parameters["rowFilter.directus_settings.public_note"];
          auth_login_attempts?: parameters["rowFilter.directus_settings.auth_login_attempts"];
          auth_password_policy?: parameters["rowFilter.directus_settings.auth_password_policy"];
          storage_asset_transform?: parameters["rowFilter.directus_settings.storage_asset_transform"];
          storage_asset_presets?: parameters["rowFilter.directus_settings.storage_asset_presets"];
          custom_css?: parameters["rowFilter.directus_settings.custom_css"];
          storage_default_folder?: parameters["rowFilter.directus_settings.storage_default_folder"];
          basemaps?: parameters["rowFilter.directus_settings.basemaps"];
          mapbox_key?: parameters["rowFilter.directus_settings.mapbox_key"];
          module_bar?: parameters["rowFilter.directus_settings.module_bar"];
          project_descriptor?: parameters["rowFilter.directus_settings.project_descriptor"];
          translation_strings?: parameters["rowFilter.directus_settings.translation_strings"];
          default_language?: parameters["rowFilter.directus_settings.default_language"];
          custom_aspect_ratios?: parameters["rowFilter.directus_settings.custom_aspect_ratios"];
        };
        body: {
          /** directus_settings */
          directus_settings?: definitions["directus_settings"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/directus_dashboards": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_dashboards.id"];
          name?: parameters["rowFilter.directus_dashboards.name"];
          icon?: parameters["rowFilter.directus_dashboards.icon"];
          note?: parameters["rowFilter.directus_dashboards.note"];
          date_created?: parameters["rowFilter.directus_dashboards.date_created"];
          user_created?: parameters["rowFilter.directus_dashboards.user_created"];
          color?: parameters["rowFilter.directus_dashboards.color"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["directus_dashboards"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** directus_dashboards */
          directus_dashboards?: definitions["directus_dashboards"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_dashboards.id"];
          name?: parameters["rowFilter.directus_dashboards.name"];
          icon?: parameters["rowFilter.directus_dashboards.icon"];
          note?: parameters["rowFilter.directus_dashboards.note"];
          date_created?: parameters["rowFilter.directus_dashboards.date_created"];
          user_created?: parameters["rowFilter.directus_dashboards.user_created"];
          color?: parameters["rowFilter.directus_dashboards.color"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_dashboards.id"];
          name?: parameters["rowFilter.directus_dashboards.name"];
          icon?: parameters["rowFilter.directus_dashboards.icon"];
          note?: parameters["rowFilter.directus_dashboards.note"];
          date_created?: parameters["rowFilter.directus_dashboards.date_created"];
          user_created?: parameters["rowFilter.directus_dashboards.user_created"];
          color?: parameters["rowFilter.directus_dashboards.color"];
        };
        body: {
          /** directus_dashboards */
          directus_dashboards?: definitions["directus_dashboards"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/directus_collections": {
    get: {
      parameters: {
        query: {
          collection?: parameters["rowFilter.directus_collections.collection"];
          icon?: parameters["rowFilter.directus_collections.icon"];
          note?: parameters["rowFilter.directus_collections.note"];
          display_template?: parameters["rowFilter.directus_collections.display_template"];
          hidden?: parameters["rowFilter.directus_collections.hidden"];
          singleton?: parameters["rowFilter.directus_collections.singleton"];
          translations?: parameters["rowFilter.directus_collections.translations"];
          archive_field?: parameters["rowFilter.directus_collections.archive_field"];
          archive_app_filter?: parameters["rowFilter.directus_collections.archive_app_filter"];
          archive_value?: parameters["rowFilter.directus_collections.archive_value"];
          unarchive_value?: parameters["rowFilter.directus_collections.unarchive_value"];
          sort_field?: parameters["rowFilter.directus_collections.sort_field"];
          accountability?: parameters["rowFilter.directus_collections.accountability"];
          color?: parameters["rowFilter.directus_collections.color"];
          item_duplication_fields?: parameters["rowFilter.directus_collections.item_duplication_fields"];
          sort?: parameters["rowFilter.directus_collections.sort"];
          group?: parameters["rowFilter.directus_collections.group"];
          collapse?: parameters["rowFilter.directus_collections.collapse"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["directus_collections"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** directus_collections */
          directus_collections?: definitions["directus_collections"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          collection?: parameters["rowFilter.directus_collections.collection"];
          icon?: parameters["rowFilter.directus_collections.icon"];
          note?: parameters["rowFilter.directus_collections.note"];
          display_template?: parameters["rowFilter.directus_collections.display_template"];
          hidden?: parameters["rowFilter.directus_collections.hidden"];
          singleton?: parameters["rowFilter.directus_collections.singleton"];
          translations?: parameters["rowFilter.directus_collections.translations"];
          archive_field?: parameters["rowFilter.directus_collections.archive_field"];
          archive_app_filter?: parameters["rowFilter.directus_collections.archive_app_filter"];
          archive_value?: parameters["rowFilter.directus_collections.archive_value"];
          unarchive_value?: parameters["rowFilter.directus_collections.unarchive_value"];
          sort_field?: parameters["rowFilter.directus_collections.sort_field"];
          accountability?: parameters["rowFilter.directus_collections.accountability"];
          color?: parameters["rowFilter.directus_collections.color"];
          item_duplication_fields?: parameters["rowFilter.directus_collections.item_duplication_fields"];
          sort?: parameters["rowFilter.directus_collections.sort"];
          group?: parameters["rowFilter.directus_collections.group"];
          collapse?: parameters["rowFilter.directus_collections.collapse"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          collection?: parameters["rowFilter.directus_collections.collection"];
          icon?: parameters["rowFilter.directus_collections.icon"];
          note?: parameters["rowFilter.directus_collections.note"];
          display_template?: parameters["rowFilter.directus_collections.display_template"];
          hidden?: parameters["rowFilter.directus_collections.hidden"];
          singleton?: parameters["rowFilter.directus_collections.singleton"];
          translations?: parameters["rowFilter.directus_collections.translations"];
          archive_field?: parameters["rowFilter.directus_collections.archive_field"];
          archive_app_filter?: parameters["rowFilter.directus_collections.archive_app_filter"];
          archive_value?: parameters["rowFilter.directus_collections.archive_value"];
          unarchive_value?: parameters["rowFilter.directus_collections.unarchive_value"];
          sort_field?: parameters["rowFilter.directus_collections.sort_field"];
          accountability?: parameters["rowFilter.directus_collections.accountability"];
          color?: parameters["rowFilter.directus_collections.color"];
          item_duplication_fields?: parameters["rowFilter.directus_collections.item_duplication_fields"];
          sort?: parameters["rowFilter.directus_collections.sort"];
          group?: parameters["rowFilter.directus_collections.group"];
          collapse?: parameters["rowFilter.directus_collections.collapse"];
        };
        body: {
          /** directus_collections */
          directus_collections?: definitions["directus_collections"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/directus_panels": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_panels.id"];
          dashboard?: parameters["rowFilter.directus_panels.dashboard"];
          name?: parameters["rowFilter.directus_panels.name"];
          icon?: parameters["rowFilter.directus_panels.icon"];
          color?: parameters["rowFilter.directus_panels.color"];
          show_header?: parameters["rowFilter.directus_panels.show_header"];
          note?: parameters["rowFilter.directus_panels.note"];
          type?: parameters["rowFilter.directus_panels.type"];
          position_x?: parameters["rowFilter.directus_panels.position_x"];
          position_y?: parameters["rowFilter.directus_panels.position_y"];
          width?: parameters["rowFilter.directus_panels.width"];
          height?: parameters["rowFilter.directus_panels.height"];
          options?: parameters["rowFilter.directus_panels.options"];
          date_created?: parameters["rowFilter.directus_panels.date_created"];
          user_created?: parameters["rowFilter.directus_panels.user_created"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["directus_panels"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** directus_panels */
          directus_panels?: definitions["directus_panels"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_panels.id"];
          dashboard?: parameters["rowFilter.directus_panels.dashboard"];
          name?: parameters["rowFilter.directus_panels.name"];
          icon?: parameters["rowFilter.directus_panels.icon"];
          color?: parameters["rowFilter.directus_panels.color"];
          show_header?: parameters["rowFilter.directus_panels.show_header"];
          note?: parameters["rowFilter.directus_panels.note"];
          type?: parameters["rowFilter.directus_panels.type"];
          position_x?: parameters["rowFilter.directus_panels.position_x"];
          position_y?: parameters["rowFilter.directus_panels.position_y"];
          width?: parameters["rowFilter.directus_panels.width"];
          height?: parameters["rowFilter.directus_panels.height"];
          options?: parameters["rowFilter.directus_panels.options"];
          date_created?: parameters["rowFilter.directus_panels.date_created"];
          user_created?: parameters["rowFilter.directus_panels.user_created"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_panels.id"];
          dashboard?: parameters["rowFilter.directus_panels.dashboard"];
          name?: parameters["rowFilter.directus_panels.name"];
          icon?: parameters["rowFilter.directus_panels.icon"];
          color?: parameters["rowFilter.directus_panels.color"];
          show_header?: parameters["rowFilter.directus_panels.show_header"];
          note?: parameters["rowFilter.directus_panels.note"];
          type?: parameters["rowFilter.directus_panels.type"];
          position_x?: parameters["rowFilter.directus_panels.position_x"];
          position_y?: parameters["rowFilter.directus_panels.position_y"];
          width?: parameters["rowFilter.directus_panels.width"];
          height?: parameters["rowFilter.directus_panels.height"];
          options?: parameters["rowFilter.directus_panels.options"];
          date_created?: parameters["rowFilter.directus_panels.date_created"];
          user_created?: parameters["rowFilter.directus_panels.user_created"];
        };
        body: {
          /** directus_panels */
          directus_panels?: definitions["directus_panels"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/profiles": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          createdAt?: parameters["rowFilter.profiles.createdAt"];
          username?: parameters["rowFilter.profiles.username"];
          locale?: parameters["rowFilter.profiles.locale"];
          sub?: parameters["rowFilter.profiles.sub"];
          email?: parameters["rowFilter.profiles.email"];
          provider?: parameters["rowFilter.profiles.provider"];
          pushAgreed?: parameters["rowFilter.profiles.pushAgreed"];
          profileImg?: parameters["rowFilter.profiles.profileImg"];
          isAdmin?: parameters["rowFilter.profiles.isAdmin"];
          discordName?: parameters["rowFilter.profiles.discordName"];
          telegramName?: parameters["rowFilter.profiles.telegramName"];
          twitterName?: parameters["rowFilter.profiles.twitterName"];
          walletAddress?: parameters["rowFilter.profiles.walletAddress"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["profiles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          createdAt?: parameters["rowFilter.profiles.createdAt"];
          username?: parameters["rowFilter.profiles.username"];
          locale?: parameters["rowFilter.profiles.locale"];
          sub?: parameters["rowFilter.profiles.sub"];
          email?: parameters["rowFilter.profiles.email"];
          provider?: parameters["rowFilter.profiles.provider"];
          pushAgreed?: parameters["rowFilter.profiles.pushAgreed"];
          profileImg?: parameters["rowFilter.profiles.profileImg"];
          isAdmin?: parameters["rowFilter.profiles.isAdmin"];
          discordName?: parameters["rowFilter.profiles.discordName"];
          telegramName?: parameters["rowFilter.profiles.telegramName"];
          twitterName?: parameters["rowFilter.profiles.twitterName"];
          walletAddress?: parameters["rowFilter.profiles.walletAddress"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          createdAt?: parameters["rowFilter.profiles.createdAt"];
          username?: parameters["rowFilter.profiles.username"];
          locale?: parameters["rowFilter.profiles.locale"];
          sub?: parameters["rowFilter.profiles.sub"];
          email?: parameters["rowFilter.profiles.email"];
          provider?: parameters["rowFilter.profiles.provider"];
          pushAgreed?: parameters["rowFilter.profiles.pushAgreed"];
          profileImg?: parameters["rowFilter.profiles.profileImg"];
          isAdmin?: parameters["rowFilter.profiles.isAdmin"];
          discordName?: parameters["rowFilter.profiles.discordName"];
          telegramName?: parameters["rowFilter.profiles.telegramName"];
          twitterName?: parameters["rowFilter.profiles.twitterName"];
          walletAddress?: parameters["rowFilter.profiles.walletAddress"];
        };
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/directus_operations": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_operations.id"];
          name?: parameters["rowFilter.directus_operations.name"];
          key?: parameters["rowFilter.directus_operations.key"];
          type?: parameters["rowFilter.directus_operations.type"];
          position_x?: parameters["rowFilter.directus_operations.position_x"];
          position_y?: parameters["rowFilter.directus_operations.position_y"];
          options?: parameters["rowFilter.directus_operations.options"];
          resolve?: parameters["rowFilter.directus_operations.resolve"];
          reject?: parameters["rowFilter.directus_operations.reject"];
          flow?: parameters["rowFilter.directus_operations.flow"];
          date_created?: parameters["rowFilter.directus_operations.date_created"];
          user_created?: parameters["rowFilter.directus_operations.user_created"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["directus_operations"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** directus_operations */
          directus_operations?: definitions["directus_operations"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_operations.id"];
          name?: parameters["rowFilter.directus_operations.name"];
          key?: parameters["rowFilter.directus_operations.key"];
          type?: parameters["rowFilter.directus_operations.type"];
          position_x?: parameters["rowFilter.directus_operations.position_x"];
          position_y?: parameters["rowFilter.directus_operations.position_y"];
          options?: parameters["rowFilter.directus_operations.options"];
          resolve?: parameters["rowFilter.directus_operations.resolve"];
          reject?: parameters["rowFilter.directus_operations.reject"];
          flow?: parameters["rowFilter.directus_operations.flow"];
          date_created?: parameters["rowFilter.directus_operations.date_created"];
          user_created?: parameters["rowFilter.directus_operations.user_created"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_operations.id"];
          name?: parameters["rowFilter.directus_operations.name"];
          key?: parameters["rowFilter.directus_operations.key"];
          type?: parameters["rowFilter.directus_operations.type"];
          position_x?: parameters["rowFilter.directus_operations.position_x"];
          position_y?: parameters["rowFilter.directus_operations.position_y"];
          options?: parameters["rowFilter.directus_operations.options"];
          resolve?: parameters["rowFilter.directus_operations.resolve"];
          reject?: parameters["rowFilter.directus_operations.reject"];
          flow?: parameters["rowFilter.directus_operations.flow"];
          date_created?: parameters["rowFilter.directus_operations.date_created"];
          user_created?: parameters["rowFilter.directus_operations.user_created"];
        };
        body: {
          /** directus_operations */
          directus_operations?: definitions["directus_operations"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/twitterToken": {
    get: {
      parameters: {
        query: {
          user?: parameters["rowFilter.twitterToken.user"];
          created_at?: parameters["rowFilter.twitterToken.created_at"];
          accessToken?: parameters["rowFilter.twitterToken.accessToken"];
          refreshToken?: parameters["rowFilter.twitterToken.refreshToken"];
          twitter_id?: parameters["rowFilter.twitterToken.twitter_id"];
          twitter_name?: parameters["rowFilter.twitterToken.twitter_name"];
          twitter_username?: parameters["rowFilter.twitterToken.twitter_username"];
          id?: parameters["rowFilter.twitterToken.id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["twitterToken"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** twitterToken */
          twitterToken?: definitions["twitterToken"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          user?: parameters["rowFilter.twitterToken.user"];
          created_at?: parameters["rowFilter.twitterToken.created_at"];
          accessToken?: parameters["rowFilter.twitterToken.accessToken"];
          refreshToken?: parameters["rowFilter.twitterToken.refreshToken"];
          twitter_id?: parameters["rowFilter.twitterToken.twitter_id"];
          twitter_name?: parameters["rowFilter.twitterToken.twitter_name"];
          twitter_username?: parameters["rowFilter.twitterToken.twitter_username"];
          id?: parameters["rowFilter.twitterToken.id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          user?: parameters["rowFilter.twitterToken.user"];
          created_at?: parameters["rowFilter.twitterToken.created_at"];
          accessToken?: parameters["rowFilter.twitterToken.accessToken"];
          refreshToken?: parameters["rowFilter.twitterToken.refreshToken"];
          twitter_id?: parameters["rowFilter.twitterToken.twitter_id"];
          twitter_name?: parameters["rowFilter.twitterToken.twitter_name"];
          twitter_username?: parameters["rowFilter.twitterToken.twitter_username"];
          id?: parameters["rowFilter.twitterToken.id"];
        };
        body: {
          /** twitterToken */
          twitterToken?: definitions["twitterToken"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/discordToken": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.discordToken.id"];
          user_id?: parameters["rowFilter.discordToken.user_id"];
          influencer_id?: parameters["rowFilter.discordToken.influencer_id"];
          access_token?: parameters["rowFilter.discordToken.access_token"];
          expires_in?: parameters["rowFilter.discordToken.expires_in"];
          refresh_token?: parameters["rowFilter.discordToken.refresh_token"];
          scope?: parameters["rowFilter.discordToken.scope"];
          token_type?: parameters["rowFilter.discordToken.token_type"];
          discordId?: parameters["rowFilter.discordToken.discordId"];
          discordUsername?: parameters["rowFilter.discordToken.discordUsername"];
          discordDiscriminator?: parameters["rowFilter.discordToken.discordDiscriminator"];
          createdAt?: parameters["rowFilter.discordToken.createdAt"];
          discordThumbnail?: parameters["rowFilter.discordToken.discordThumbnail"];
          hourLimit?: parameters["rowFilter.discordToken.hourLimit"];
          lastVisited?: parameters["rowFilter.discordToken.lastVisited"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["discordToken"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** discordToken */
          discordToken?: definitions["discordToken"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.discordToken.id"];
          user_id?: parameters["rowFilter.discordToken.user_id"];
          influencer_id?: parameters["rowFilter.discordToken.influencer_id"];
          access_token?: parameters["rowFilter.discordToken.access_token"];
          expires_in?: parameters["rowFilter.discordToken.expires_in"];
          refresh_token?: parameters["rowFilter.discordToken.refresh_token"];
          scope?: parameters["rowFilter.discordToken.scope"];
          token_type?: parameters["rowFilter.discordToken.token_type"];
          discordId?: parameters["rowFilter.discordToken.discordId"];
          discordUsername?: parameters["rowFilter.discordToken.discordUsername"];
          discordDiscriminator?: parameters["rowFilter.discordToken.discordDiscriminator"];
          createdAt?: parameters["rowFilter.discordToken.createdAt"];
          discordThumbnail?: parameters["rowFilter.discordToken.discordThumbnail"];
          hourLimit?: parameters["rowFilter.discordToken.hourLimit"];
          lastVisited?: parameters["rowFilter.discordToken.lastVisited"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.discordToken.id"];
          user_id?: parameters["rowFilter.discordToken.user_id"];
          influencer_id?: parameters["rowFilter.discordToken.influencer_id"];
          access_token?: parameters["rowFilter.discordToken.access_token"];
          expires_in?: parameters["rowFilter.discordToken.expires_in"];
          refresh_token?: parameters["rowFilter.discordToken.refresh_token"];
          scope?: parameters["rowFilter.discordToken.scope"];
          token_type?: parameters["rowFilter.discordToken.token_type"];
          discordId?: parameters["rowFilter.discordToken.discordId"];
          discordUsername?: parameters["rowFilter.discordToken.discordUsername"];
          discordDiscriminator?: parameters["rowFilter.discordToken.discordDiscriminator"];
          createdAt?: parameters["rowFilter.discordToken.createdAt"];
          discordThumbnail?: parameters["rowFilter.discordToken.discordThumbnail"];
          hourLimit?: parameters["rowFilter.discordToken.hourLimit"];
          lastVisited?: parameters["rowFilter.discordToken.lastVisited"];
        };
        body: {
          /** discordToken */
          discordToken?: definitions["discordToken"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/directus_activity": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_activity.id"];
          action?: parameters["rowFilter.directus_activity.action"];
          user?: parameters["rowFilter.directus_activity.user"];
          timestamp?: parameters["rowFilter.directus_activity.timestamp"];
          ip?: parameters["rowFilter.directus_activity.ip"];
          user_agent?: parameters["rowFilter.directus_activity.user_agent"];
          collection?: parameters["rowFilter.directus_activity.collection"];
          item?: parameters["rowFilter.directus_activity.item"];
          comment?: parameters["rowFilter.directus_activity.comment"];
          origin?: parameters["rowFilter.directus_activity.origin"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["directus_activity"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** directus_activity */
          directus_activity?: definitions["directus_activity"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_activity.id"];
          action?: parameters["rowFilter.directus_activity.action"];
          user?: parameters["rowFilter.directus_activity.user"];
          timestamp?: parameters["rowFilter.directus_activity.timestamp"];
          ip?: parameters["rowFilter.directus_activity.ip"];
          user_agent?: parameters["rowFilter.directus_activity.user_agent"];
          collection?: parameters["rowFilter.directus_activity.collection"];
          item?: parameters["rowFilter.directus_activity.item"];
          comment?: parameters["rowFilter.directus_activity.comment"];
          origin?: parameters["rowFilter.directus_activity.origin"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_activity.id"];
          action?: parameters["rowFilter.directus_activity.action"];
          user?: parameters["rowFilter.directus_activity.user"];
          timestamp?: parameters["rowFilter.directus_activity.timestamp"];
          ip?: parameters["rowFilter.directus_activity.ip"];
          user_agent?: parameters["rowFilter.directus_activity.user_agent"];
          collection?: parameters["rowFilter.directus_activity.collection"];
          item?: parameters["rowFilter.directus_activity.item"];
          comment?: parameters["rowFilter.directus_activity.comment"];
          origin?: parameters["rowFilter.directus_activity.origin"];
        };
        body: {
          /** directus_activity */
          directus_activity?: definitions["directus_activity"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/notifications": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.notifications.id"];
          createdAt?: parameters["rowFilter.notifications.createdAt"];
          title?: parameters["rowFilter.notifications.title"];
          body?: parameters["rowFilter.notifications.body"];
          avatar?: parameters["rowFilter.notifications.avatar"];
          link?: parameters["rowFilter.notifications.link"];
          user?: parameters["rowFilter.notifications.user"];
          read?: parameters["rowFilter.notifications.read"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["notifications"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** notifications */
          notifications?: definitions["notifications"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.notifications.id"];
          createdAt?: parameters["rowFilter.notifications.createdAt"];
          title?: parameters["rowFilter.notifications.title"];
          body?: parameters["rowFilter.notifications.body"];
          avatar?: parameters["rowFilter.notifications.avatar"];
          link?: parameters["rowFilter.notifications.link"];
          user?: parameters["rowFilter.notifications.user"];
          read?: parameters["rowFilter.notifications.read"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.notifications.id"];
          createdAt?: parameters["rowFilter.notifications.createdAt"];
          title?: parameters["rowFilter.notifications.title"];
          body?: parameters["rowFilter.notifications.body"];
          avatar?: parameters["rowFilter.notifications.avatar"];
          link?: parameters["rowFilter.notifications.link"];
          user?: parameters["rowFilter.notifications.user"];
          read?: parameters["rowFilter.notifications.read"];
        };
        body: {
          /** notifications */
          notifications?: definitions["notifications"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/raffles_with_influencer": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.raffles_with_influencer.id"];
          createdAt?: parameters["rowFilter.raffles_with_influencer.createdAt"];
          influencer?: parameters["rowFilter.raffles_with_influencer.influencer"];
          isPublished?: parameters["rowFilter.raffles_with_influencer.isPublished"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["raffles_with_influencer"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/influencerMetricHistories": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.influencerMetricHistories.id"];
          twitterFollowers?: parameters["rowFilter.influencerMetricHistories.twitterFollowers"];
          discordMembers?: parameters["rowFilter.influencerMetricHistories.discordMembers"];
          datetime?: parameters["rowFilter.influencerMetricHistories.datetime"];
          discordPresenseMembers?: parameters["rowFilter.influencerMetricHistories.discordPresenseMembers"];
          influencer?: parameters["rowFilter.influencerMetricHistories.influencer"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["influencerMetricHistories"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** influencerMetricHistories */
          influencerMetricHistories?: definitions["influencerMetricHistories"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.influencerMetricHistories.id"];
          twitterFollowers?: parameters["rowFilter.influencerMetricHistories.twitterFollowers"];
          discordMembers?: parameters["rowFilter.influencerMetricHistories.discordMembers"];
          datetime?: parameters["rowFilter.influencerMetricHistories.datetime"];
          discordPresenseMembers?: parameters["rowFilter.influencerMetricHistories.discordPresenseMembers"];
          influencer?: parameters["rowFilter.influencerMetricHistories.influencer"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.influencerMetricHistories.id"];
          twitterFollowers?: parameters["rowFilter.influencerMetricHistories.twitterFollowers"];
          discordMembers?: parameters["rowFilter.influencerMetricHistories.discordMembers"];
          datetime?: parameters["rowFilter.influencerMetricHistories.datetime"];
          discordPresenseMembers?: parameters["rowFilter.influencerMetricHistories.discordPresenseMembers"];
          influencer?: parameters["rowFilter.influencerMetricHistories.influencer"];
        };
        body: {
          /** influencerMetricHistories */
          influencerMetricHistories?: definitions["influencerMetricHistories"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/raffles": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.raffles.id"];
          project?: parameters["rowFilter.raffles.project"];
          name?: parameters["rowFilter.raffles.name"];
          thumbnail?: parameters["rowFilter.raffles.thumbnail"];
          rewards?: parameters["rowFilter.raffles.rewards"];
          conditions?: parameters["rowFilter.raffles.conditions"];
          results?: parameters["rowFilter.raffles.results"];
          url?: parameters["rowFilter.raffles.url"];
          openDatetime?: parameters["rowFilter.raffles.openDatetime"];
          closeDatetime?: parameters["rowFilter.raffles.closeDatetime"];
          createdAt?: parameters["rowFilter.raffles.createdAt"];
          vender?: parameters["rowFilter.raffles.vender"];
          isRaffleOriginal?: parameters["rowFilter.raffles.isRaffleOriginal"];
          isEnded?: parameters["rowFilter.raffles.isEnded"];
          description?: parameters["rowFilter.raffles.description"];
          type?: parameters["rowFilter.raffles.type"];
          duration?: parameters["rowFilter.raffles.duration"];
          influencer?: parameters["rowFilter.raffles.influencer"];
          tweetUrl?: parameters["rowFilter.raffles.tweetUrl"];
          getTelegramName?: parameters["rowFilter.raffles.getTelegramName"];
          getTwitterName?: parameters["rowFilter.raffles.getTwitterName"];
          getDiscordName?: parameters["rowFilter.raffles.getDiscordName"];
          getWalletAddress?: parameters["rowFilter.raffles.getWalletAddress"];
          others?: parameters["rowFilter.raffles.others"];
          resultContent?: parameters["rowFilter.raffles.resultContent"];
          isPublished?: parameters["rowFilter.raffles.isPublished"];
          showGetDiscordName?: parameters["rowFilter.raffles.showGetDiscordName"];
          showGetTelegramName?: parameters["rowFilter.raffles.showGetTelegramName"];
          showGetTwitterName?: parameters["rowFilter.raffles.showGetTwitterName"];
          showGetWalletAddress?: parameters["rowFilter.raffles.showGetWalletAddress"];
          walletType?: parameters["rowFilter.raffles.walletType"];
          additionalForms?: parameters["rowFilter.raffles.additionalForms"];
          submitDescription?: parameters["rowFilter.raffles.submitDescription"];
          isDescriptionHtml?: parameters["rowFilter.raffles.isDescriptionHtml"];
          description_ko?: parameters["rowFilter.raffles.description_ko"];
          tweetMedia?: parameters["rowFilter.raffles.tweetMedia"];
          isTest?: parameters["rowFilter.raffles.isTest"];
          savedTweet?: parameters["rowFilter.raffles.savedTweet"];
          reservedTweetDatetime?: parameters["rowFilter.raffles.reservedTweetDatetime"];
          tweetPublished?: parameters["rowFilter.raffles.tweetPublished"];
          submitDescription_ko?: parameters["rowFilter.raffles.submitDescription_ko"];
          resultContent_ko?: parameters["rowFilter.raffles.resultContent_ko"];
          name_ko?: parameters["rowFilter.raffles.name_ko"];
          isDeleted?: parameters["rowFilter.raffles.isDeleted"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["raffles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** raffles */
          raffles?: definitions["raffles"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.raffles.id"];
          project?: parameters["rowFilter.raffles.project"];
          name?: parameters["rowFilter.raffles.name"];
          thumbnail?: parameters["rowFilter.raffles.thumbnail"];
          rewards?: parameters["rowFilter.raffles.rewards"];
          conditions?: parameters["rowFilter.raffles.conditions"];
          results?: parameters["rowFilter.raffles.results"];
          url?: parameters["rowFilter.raffles.url"];
          openDatetime?: parameters["rowFilter.raffles.openDatetime"];
          closeDatetime?: parameters["rowFilter.raffles.closeDatetime"];
          createdAt?: parameters["rowFilter.raffles.createdAt"];
          vender?: parameters["rowFilter.raffles.vender"];
          isRaffleOriginal?: parameters["rowFilter.raffles.isRaffleOriginal"];
          isEnded?: parameters["rowFilter.raffles.isEnded"];
          description?: parameters["rowFilter.raffles.description"];
          type?: parameters["rowFilter.raffles.type"];
          duration?: parameters["rowFilter.raffles.duration"];
          influencer?: parameters["rowFilter.raffles.influencer"];
          tweetUrl?: parameters["rowFilter.raffles.tweetUrl"];
          getTelegramName?: parameters["rowFilter.raffles.getTelegramName"];
          getTwitterName?: parameters["rowFilter.raffles.getTwitterName"];
          getDiscordName?: parameters["rowFilter.raffles.getDiscordName"];
          getWalletAddress?: parameters["rowFilter.raffles.getWalletAddress"];
          others?: parameters["rowFilter.raffles.others"];
          resultContent?: parameters["rowFilter.raffles.resultContent"];
          isPublished?: parameters["rowFilter.raffles.isPublished"];
          showGetDiscordName?: parameters["rowFilter.raffles.showGetDiscordName"];
          showGetTelegramName?: parameters["rowFilter.raffles.showGetTelegramName"];
          showGetTwitterName?: parameters["rowFilter.raffles.showGetTwitterName"];
          showGetWalletAddress?: parameters["rowFilter.raffles.showGetWalletAddress"];
          walletType?: parameters["rowFilter.raffles.walletType"];
          additionalForms?: parameters["rowFilter.raffles.additionalForms"];
          submitDescription?: parameters["rowFilter.raffles.submitDescription"];
          isDescriptionHtml?: parameters["rowFilter.raffles.isDescriptionHtml"];
          description_ko?: parameters["rowFilter.raffles.description_ko"];
          tweetMedia?: parameters["rowFilter.raffles.tweetMedia"];
          isTest?: parameters["rowFilter.raffles.isTest"];
          savedTweet?: parameters["rowFilter.raffles.savedTweet"];
          reservedTweetDatetime?: parameters["rowFilter.raffles.reservedTweetDatetime"];
          tweetPublished?: parameters["rowFilter.raffles.tweetPublished"];
          submitDescription_ko?: parameters["rowFilter.raffles.submitDescription_ko"];
          resultContent_ko?: parameters["rowFilter.raffles.resultContent_ko"];
          name_ko?: parameters["rowFilter.raffles.name_ko"];
          isDeleted?: parameters["rowFilter.raffles.isDeleted"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.raffles.id"];
          project?: parameters["rowFilter.raffles.project"];
          name?: parameters["rowFilter.raffles.name"];
          thumbnail?: parameters["rowFilter.raffles.thumbnail"];
          rewards?: parameters["rowFilter.raffles.rewards"];
          conditions?: parameters["rowFilter.raffles.conditions"];
          results?: parameters["rowFilter.raffles.results"];
          url?: parameters["rowFilter.raffles.url"];
          openDatetime?: parameters["rowFilter.raffles.openDatetime"];
          closeDatetime?: parameters["rowFilter.raffles.closeDatetime"];
          createdAt?: parameters["rowFilter.raffles.createdAt"];
          vender?: parameters["rowFilter.raffles.vender"];
          isRaffleOriginal?: parameters["rowFilter.raffles.isRaffleOriginal"];
          isEnded?: parameters["rowFilter.raffles.isEnded"];
          description?: parameters["rowFilter.raffles.description"];
          type?: parameters["rowFilter.raffles.type"];
          duration?: parameters["rowFilter.raffles.duration"];
          influencer?: parameters["rowFilter.raffles.influencer"];
          tweetUrl?: parameters["rowFilter.raffles.tweetUrl"];
          getTelegramName?: parameters["rowFilter.raffles.getTelegramName"];
          getTwitterName?: parameters["rowFilter.raffles.getTwitterName"];
          getDiscordName?: parameters["rowFilter.raffles.getDiscordName"];
          getWalletAddress?: parameters["rowFilter.raffles.getWalletAddress"];
          others?: parameters["rowFilter.raffles.others"];
          resultContent?: parameters["rowFilter.raffles.resultContent"];
          isPublished?: parameters["rowFilter.raffles.isPublished"];
          showGetDiscordName?: parameters["rowFilter.raffles.showGetDiscordName"];
          showGetTelegramName?: parameters["rowFilter.raffles.showGetTelegramName"];
          showGetTwitterName?: parameters["rowFilter.raffles.showGetTwitterName"];
          showGetWalletAddress?: parameters["rowFilter.raffles.showGetWalletAddress"];
          walletType?: parameters["rowFilter.raffles.walletType"];
          additionalForms?: parameters["rowFilter.raffles.additionalForms"];
          submitDescription?: parameters["rowFilter.raffles.submitDescription"];
          isDescriptionHtml?: parameters["rowFilter.raffles.isDescriptionHtml"];
          description_ko?: parameters["rowFilter.raffles.description_ko"];
          tweetMedia?: parameters["rowFilter.raffles.tweetMedia"];
          isTest?: parameters["rowFilter.raffles.isTest"];
          savedTweet?: parameters["rowFilter.raffles.savedTweet"];
          reservedTweetDatetime?: parameters["rowFilter.raffles.reservedTweetDatetime"];
          tweetPublished?: parameters["rowFilter.raffles.tweetPublished"];
          submitDescription_ko?: parameters["rowFilter.raffles.submitDescription_ko"];
          resultContent_ko?: parameters["rowFilter.raffles.resultContent_ko"];
          name_ko?: parameters["rowFilter.raffles.name_ko"];
          isDeleted?: parameters["rowFilter.raffles.isDeleted"];
        };
        body: {
          /** raffles */
          raffles?: definitions["raffles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/directus_notifications": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_notifications.id"];
          timestamp?: parameters["rowFilter.directus_notifications.timestamp"];
          status?: parameters["rowFilter.directus_notifications.status"];
          recipient?: parameters["rowFilter.directus_notifications.recipient"];
          sender?: parameters["rowFilter.directus_notifications.sender"];
          subject?: parameters["rowFilter.directus_notifications.subject"];
          message?: parameters["rowFilter.directus_notifications.message"];
          collection?: parameters["rowFilter.directus_notifications.collection"];
          item?: parameters["rowFilter.directus_notifications.item"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["directus_notifications"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** directus_notifications */
          directus_notifications?: definitions["directus_notifications"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_notifications.id"];
          timestamp?: parameters["rowFilter.directus_notifications.timestamp"];
          status?: parameters["rowFilter.directus_notifications.status"];
          recipient?: parameters["rowFilter.directus_notifications.recipient"];
          sender?: parameters["rowFilter.directus_notifications.sender"];
          subject?: parameters["rowFilter.directus_notifications.subject"];
          message?: parameters["rowFilter.directus_notifications.message"];
          collection?: parameters["rowFilter.directus_notifications.collection"];
          item?: parameters["rowFilter.directus_notifications.item"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_notifications.id"];
          timestamp?: parameters["rowFilter.directus_notifications.timestamp"];
          status?: parameters["rowFilter.directus_notifications.status"];
          recipient?: parameters["rowFilter.directus_notifications.recipient"];
          sender?: parameters["rowFilter.directus_notifications.sender"];
          subject?: parameters["rowFilter.directus_notifications.subject"];
          message?: parameters["rowFilter.directus_notifications.message"];
          collection?: parameters["rowFilter.directus_notifications.collection"];
          item?: parameters["rowFilter.directus_notifications.item"];
        };
        body: {
          /** directus_notifications */
          directus_notifications?: definitions["directus_notifications"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/directus_relations": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_relations.id"];
          many_collection?: parameters["rowFilter.directus_relations.many_collection"];
          many_field?: parameters["rowFilter.directus_relations.many_field"];
          one_collection?: parameters["rowFilter.directus_relations.one_collection"];
          one_field?: parameters["rowFilter.directus_relations.one_field"];
          one_collection_field?: parameters["rowFilter.directus_relations.one_collection_field"];
          one_allowed_collections?: parameters["rowFilter.directus_relations.one_allowed_collections"];
          junction_field?: parameters["rowFilter.directus_relations.junction_field"];
          sort_field?: parameters["rowFilter.directus_relations.sort_field"];
          one_deselect_action?: parameters["rowFilter.directus_relations.one_deselect_action"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["directus_relations"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** directus_relations */
          directus_relations?: definitions["directus_relations"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_relations.id"];
          many_collection?: parameters["rowFilter.directus_relations.many_collection"];
          many_field?: parameters["rowFilter.directus_relations.many_field"];
          one_collection?: parameters["rowFilter.directus_relations.one_collection"];
          one_field?: parameters["rowFilter.directus_relations.one_field"];
          one_collection_field?: parameters["rowFilter.directus_relations.one_collection_field"];
          one_allowed_collections?: parameters["rowFilter.directus_relations.one_allowed_collections"];
          junction_field?: parameters["rowFilter.directus_relations.junction_field"];
          sort_field?: parameters["rowFilter.directus_relations.sort_field"];
          one_deselect_action?: parameters["rowFilter.directus_relations.one_deselect_action"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_relations.id"];
          many_collection?: parameters["rowFilter.directus_relations.many_collection"];
          many_field?: parameters["rowFilter.directus_relations.many_field"];
          one_collection?: parameters["rowFilter.directus_relations.one_collection"];
          one_field?: parameters["rowFilter.directus_relations.one_field"];
          one_collection_field?: parameters["rowFilter.directus_relations.one_collection_field"];
          one_allowed_collections?: parameters["rowFilter.directus_relations.one_allowed_collections"];
          junction_field?: parameters["rowFilter.directus_relations.junction_field"];
          sort_field?: parameters["rowFilter.directus_relations.sort_field"];
          one_deselect_action?: parameters["rowFilter.directus_relations.one_deselect_action"];
        };
        body: {
          /** directus_relations */
          directus_relations?: definitions["directus_relations"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/pushKeys": {
    get: {
      parameters: {
        query: {
          key?: parameters["rowFilter.pushKeys.key"];
          createdAt?: parameters["rowFilter.pushKeys.createdAt"];
          device?: parameters["rowFilter.pushKeys.device"];
          user?: parameters["rowFilter.pushKeys.user"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["pushKeys"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** pushKeys */
          pushKeys?: definitions["pushKeys"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          key?: parameters["rowFilter.pushKeys.key"];
          createdAt?: parameters["rowFilter.pushKeys.createdAt"];
          device?: parameters["rowFilter.pushKeys.device"];
          user?: parameters["rowFilter.pushKeys.user"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          key?: parameters["rowFilter.pushKeys.key"];
          createdAt?: parameters["rowFilter.pushKeys.createdAt"];
          device?: parameters["rowFilter.pushKeys.device"];
          user?: parameters["rowFilter.pushKeys.user"];
        };
        body: {
          /** pushKeys */
          pushKeys?: definitions["pushKeys"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/raffles_with_socialmetrics": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.raffles_with_socialmetrics.id"];
          project?: parameters["rowFilter.raffles_with_socialmetrics.project"];
          name?: parameters["rowFilter.raffles_with_socialmetrics.name"];
          thumbnail?: parameters["rowFilter.raffles_with_socialmetrics.thumbnail"];
          rewards?: parameters["rowFilter.raffles_with_socialmetrics.rewards"];
          conditions?: parameters["rowFilter.raffles_with_socialmetrics.conditions"];
          results?: parameters["rowFilter.raffles_with_socialmetrics.results"];
          url?: parameters["rowFilter.raffles_with_socialmetrics.url"];
          openDatetime?: parameters["rowFilter.raffles_with_socialmetrics.openDatetime"];
          closeDatetime?: parameters["rowFilter.raffles_with_socialmetrics.closeDatetime"];
          createdAt?: parameters["rowFilter.raffles_with_socialmetrics.createdAt"];
          vender?: parameters["rowFilter.raffles_with_socialmetrics.vender"];
          isRaffleOriginal?: parameters["rowFilter.raffles_with_socialmetrics.isRaffleOriginal"];
          isEnded?: parameters["rowFilter.raffles_with_socialmetrics.isEnded"];
          description?: parameters["rowFilter.raffles_with_socialmetrics.description"];
          type?: parameters["rowFilter.raffles_with_socialmetrics.type"];
          duration?: parameters["rowFilter.raffles_with_socialmetrics.duration"];
          influencer?: parameters["rowFilter.raffles_with_socialmetrics.influencer"];
          tweetUrl?: parameters["rowFilter.raffles_with_socialmetrics.tweetUrl"];
          getTelegramName?: parameters["rowFilter.raffles_with_socialmetrics.getTelegramName"];
          getTwitterName?: parameters["rowFilter.raffles_with_socialmetrics.getTwitterName"];
          getDiscordName?: parameters["rowFilter.raffles_with_socialmetrics.getDiscordName"];
          getWalletAddress?: parameters["rowFilter.raffles_with_socialmetrics.getWalletAddress"];
          others?: parameters["rowFilter.raffles_with_socialmetrics.others"];
          resultContent?: parameters["rowFilter.raffles_with_socialmetrics.resultContent"];
          isPublished?: parameters["rowFilter.raffles_with_socialmetrics.isPublished"];
          showGetDiscordName?: parameters["rowFilter.raffles_with_socialmetrics.showGetDiscordName"];
          showGetTelegramName?: parameters["rowFilter.raffles_with_socialmetrics.showGetTelegramName"];
          showGetTwitterName?: parameters["rowFilter.raffles_with_socialmetrics.showGetTwitterName"];
          showGetWalletAddress?: parameters["rowFilter.raffles_with_socialmetrics.showGetWalletAddress"];
          walletType?: parameters["rowFilter.raffles_with_socialmetrics.walletType"];
          additionalForms?: parameters["rowFilter.raffles_with_socialmetrics.additionalForms"];
          submitDescription?: parameters["rowFilter.raffles_with_socialmetrics.submitDescription"];
          isDescriptionHtml?: parameters["rowFilter.raffles_with_socialmetrics.isDescriptionHtml"];
          description_ko?: parameters["rowFilter.raffles_with_socialmetrics.description_ko"];
          tweetMedia?: parameters["rowFilter.raffles_with_socialmetrics.tweetMedia"];
          isTest?: parameters["rowFilter.raffles_with_socialmetrics.isTest"];
          savedTweet?: parameters["rowFilter.raffles_with_socialmetrics.savedTweet"];
          reservedTweetDatetime?: parameters["rowFilter.raffles_with_socialmetrics.reservedTweetDatetime"];
          tweetPublished?: parameters["rowFilter.raffles_with_socialmetrics.tweetPublished"];
          submitDescription_ko?: parameters["rowFilter.raffles_with_socialmetrics.submitDescription_ko"];
          resultContent_ko?: parameters["rowFilter.raffles_with_socialmetrics.resultContent_ko"];
          name_ko?: parameters["rowFilter.raffles_with_socialmetrics.name_ko"];
          isDeleted?: parameters["rowFilter.raffles_with_socialmetrics.isDeleted"];
          twitterFollowers?: parameters["rowFilter.raffles_with_socialmetrics.twitterFollowers"];
          twitterFollowersChange?: parameters["rowFilter.raffles_with_socialmetrics.twitterFollowersChange"];
          discordMembers?: parameters["rowFilter.raffles_with_socialmetrics.discordMembers"];
          discordMembersChange?: parameters["rowFilter.raffles_with_socialmetrics.discordMembersChange"];
          discordPresenseMembers?: parameters["rowFilter.raffles_with_socialmetrics.discordPresenseMembers"];
          discordPresenseMembersChange?: parameters["rowFilter.raffles_with_socialmetrics.discordPresenseMembersChange"];
          socialMetrics?: parameters["rowFilter.raffles_with_socialmetrics.socialMetrics"];
          socialMetricsChanges?: parameters["rowFilter.raffles_with_socialmetrics.socialMetricsChanges"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["raffles_with_socialmetrics"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/directus_folders": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_folders.id"];
          name?: parameters["rowFilter.directus_folders.name"];
          parent?: parameters["rowFilter.directus_folders.parent"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["directus_folders"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** directus_folders */
          directus_folders?: definitions["directus_folders"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_folders.id"];
          name?: parameters["rowFilter.directus_folders.name"];
          parent?: parameters["rowFilter.directus_folders.parent"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_folders.id"];
          name?: parameters["rowFilter.directus_folders.name"];
          parent?: parameters["rowFilter.directus_folders.parent"];
        };
        body: {
          /** directus_folders */
          directus_folders?: definitions["directus_folders"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/directus_users": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_users.id"];
          first_name?: parameters["rowFilter.directus_users.first_name"];
          last_name?: parameters["rowFilter.directus_users.last_name"];
          email?: parameters["rowFilter.directus_users.email"];
          password?: parameters["rowFilter.directus_users.password"];
          location?: parameters["rowFilter.directus_users.location"];
          title?: parameters["rowFilter.directus_users.title"];
          description?: parameters["rowFilter.directus_users.description"];
          tags?: parameters["rowFilter.directus_users.tags"];
          avatar?: parameters["rowFilter.directus_users.avatar"];
          language?: parameters["rowFilter.directus_users.language"];
          theme?: parameters["rowFilter.directus_users.theme"];
          tfa_secret?: parameters["rowFilter.directus_users.tfa_secret"];
          status?: parameters["rowFilter.directus_users.status"];
          role?: parameters["rowFilter.directus_users.role"];
          token?: parameters["rowFilter.directus_users.token"];
          last_access?: parameters["rowFilter.directus_users.last_access"];
          last_page?: parameters["rowFilter.directus_users.last_page"];
          provider?: parameters["rowFilter.directus_users.provider"];
          external_identifier?: parameters["rowFilter.directus_users.external_identifier"];
          auth_data?: parameters["rowFilter.directus_users.auth_data"];
          email_notifications?: parameters["rowFilter.directus_users.email_notifications"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["directus_users"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** directus_users */
          directus_users?: definitions["directus_users"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_users.id"];
          first_name?: parameters["rowFilter.directus_users.first_name"];
          last_name?: parameters["rowFilter.directus_users.last_name"];
          email?: parameters["rowFilter.directus_users.email"];
          password?: parameters["rowFilter.directus_users.password"];
          location?: parameters["rowFilter.directus_users.location"];
          title?: parameters["rowFilter.directus_users.title"];
          description?: parameters["rowFilter.directus_users.description"];
          tags?: parameters["rowFilter.directus_users.tags"];
          avatar?: parameters["rowFilter.directus_users.avatar"];
          language?: parameters["rowFilter.directus_users.language"];
          theme?: parameters["rowFilter.directus_users.theme"];
          tfa_secret?: parameters["rowFilter.directus_users.tfa_secret"];
          status?: parameters["rowFilter.directus_users.status"];
          role?: parameters["rowFilter.directus_users.role"];
          token?: parameters["rowFilter.directus_users.token"];
          last_access?: parameters["rowFilter.directus_users.last_access"];
          last_page?: parameters["rowFilter.directus_users.last_page"];
          provider?: parameters["rowFilter.directus_users.provider"];
          external_identifier?: parameters["rowFilter.directus_users.external_identifier"];
          auth_data?: parameters["rowFilter.directus_users.auth_data"];
          email_notifications?: parameters["rowFilter.directus_users.email_notifications"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_users.id"];
          first_name?: parameters["rowFilter.directus_users.first_name"];
          last_name?: parameters["rowFilter.directus_users.last_name"];
          email?: parameters["rowFilter.directus_users.email"];
          password?: parameters["rowFilter.directus_users.password"];
          location?: parameters["rowFilter.directus_users.location"];
          title?: parameters["rowFilter.directus_users.title"];
          description?: parameters["rowFilter.directus_users.description"];
          tags?: parameters["rowFilter.directus_users.tags"];
          avatar?: parameters["rowFilter.directus_users.avatar"];
          language?: parameters["rowFilter.directus_users.language"];
          theme?: parameters["rowFilter.directus_users.theme"];
          tfa_secret?: parameters["rowFilter.directus_users.tfa_secret"];
          status?: parameters["rowFilter.directus_users.status"];
          role?: parameters["rowFilter.directus_users.role"];
          token?: parameters["rowFilter.directus_users.token"];
          last_access?: parameters["rowFilter.directus_users.last_access"];
          last_page?: parameters["rowFilter.directus_users.last_page"];
          provider?: parameters["rowFilter.directus_users.provider"];
          external_identifier?: parameters["rowFilter.directus_users.external_identifier"];
          auth_data?: parameters["rowFilter.directus_users.auth_data"];
          email_notifications?: parameters["rowFilter.directus_users.email_notifications"];
        };
        body: {
          /** directus_users */
          directus_users?: definitions["directus_users"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/tempForTwitterAuth": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.tempForTwitterAuth.id"];
          data?: parameters["rowFilter.tempForTwitterAuth.data"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["tempForTwitterAuth"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** tempForTwitterAuth */
          tempForTwitterAuth?: definitions["tempForTwitterAuth"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.tempForTwitterAuth.id"];
          data?: parameters["rowFilter.tempForTwitterAuth.data"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.tempForTwitterAuth.id"];
          data?: parameters["rowFilter.tempForTwitterAuth.data"];
        };
        body: {
          /** tempForTwitterAuth */
          tempForTwitterAuth?: definitions["tempForTwitterAuth"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/directus_files": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_files.id"];
          storage?: parameters["rowFilter.directus_files.storage"];
          filename_disk?: parameters["rowFilter.directus_files.filename_disk"];
          filename_download?: parameters["rowFilter.directus_files.filename_download"];
          title?: parameters["rowFilter.directus_files.title"];
          type?: parameters["rowFilter.directus_files.type"];
          folder?: parameters["rowFilter.directus_files.folder"];
          uploaded_by?: parameters["rowFilter.directus_files.uploaded_by"];
          uploaded_on?: parameters["rowFilter.directus_files.uploaded_on"];
          modified_by?: parameters["rowFilter.directus_files.modified_by"];
          modified_on?: parameters["rowFilter.directus_files.modified_on"];
          charset?: parameters["rowFilter.directus_files.charset"];
          filesize?: parameters["rowFilter.directus_files.filesize"];
          width?: parameters["rowFilter.directus_files.width"];
          height?: parameters["rowFilter.directus_files.height"];
          duration?: parameters["rowFilter.directus_files.duration"];
          embed?: parameters["rowFilter.directus_files.embed"];
          description?: parameters["rowFilter.directus_files.description"];
          location?: parameters["rowFilter.directus_files.location"];
          tags?: parameters["rowFilter.directus_files.tags"];
          metadata?: parameters["rowFilter.directus_files.metadata"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["directus_files"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** directus_files */
          directus_files?: definitions["directus_files"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_files.id"];
          storage?: parameters["rowFilter.directus_files.storage"];
          filename_disk?: parameters["rowFilter.directus_files.filename_disk"];
          filename_download?: parameters["rowFilter.directus_files.filename_download"];
          title?: parameters["rowFilter.directus_files.title"];
          type?: parameters["rowFilter.directus_files.type"];
          folder?: parameters["rowFilter.directus_files.folder"];
          uploaded_by?: parameters["rowFilter.directus_files.uploaded_by"];
          uploaded_on?: parameters["rowFilter.directus_files.uploaded_on"];
          modified_by?: parameters["rowFilter.directus_files.modified_by"];
          modified_on?: parameters["rowFilter.directus_files.modified_on"];
          charset?: parameters["rowFilter.directus_files.charset"];
          filesize?: parameters["rowFilter.directus_files.filesize"];
          width?: parameters["rowFilter.directus_files.width"];
          height?: parameters["rowFilter.directus_files.height"];
          duration?: parameters["rowFilter.directus_files.duration"];
          embed?: parameters["rowFilter.directus_files.embed"];
          description?: parameters["rowFilter.directus_files.description"];
          location?: parameters["rowFilter.directus_files.location"];
          tags?: parameters["rowFilter.directus_files.tags"];
          metadata?: parameters["rowFilter.directus_files.metadata"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.directus_files.id"];
          storage?: parameters["rowFilter.directus_files.storage"];
          filename_disk?: parameters["rowFilter.directus_files.filename_disk"];
          filename_download?: parameters["rowFilter.directus_files.filename_download"];
          title?: parameters["rowFilter.directus_files.title"];
          type?: parameters["rowFilter.directus_files.type"];
          folder?: parameters["rowFilter.directus_files.folder"];
          uploaded_by?: parameters["rowFilter.directus_files.uploaded_by"];
          uploaded_on?: parameters["rowFilter.directus_files.uploaded_on"];
          modified_by?: parameters["rowFilter.directus_files.modified_by"];
          modified_on?: parameters["rowFilter.directus_files.modified_on"];
          charset?: parameters["rowFilter.directus_files.charset"];
          filesize?: parameters["rowFilter.directus_files.filesize"];
          width?: parameters["rowFilter.directus_files.width"];
          height?: parameters["rowFilter.directus_files.height"];
          duration?: parameters["rowFilter.directus_files.duration"];
          embed?: parameters["rowFilter.directus_files.embed"];
          description?: parameters["rowFilter.directus_files.description"];
          location?: parameters["rowFilter.directus_files.location"];
          tags?: parameters["rowFilter.directus_files.tags"];
          metadata?: parameters["rowFilter.directus_files.metadata"];
        };
        body: {
          /** directus_files */
          directus_files?: definitions["directus_files"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  projects: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    createdAt?: string;
    /** Format: character varying */
    thumbnail?: string;
    /** Format: character varying */
    name?: string;
    /** Format: text */
    description?: string;
    /** Format: json */
    socialAccounts?: unknown;
    /** Format: character varying */
    blockchain?: string;
    /** Format: character varying */
    url?: string;
    /** Format: json */
    socialMetrics?: unknown;
    /** Format: json */
    socialMetricsChanges?: unknown;
    /** Format: character varying */
    discord?: string;
    /** Format: bigint */
    discordMembers: number;
    /** Format: character varying */
    facebook?: string;
    /** Format: character varying */
    instagram?: string;
    /** Format: character varying */
    kakao?: string;
    /** Format: character varying */
    magiceden?: string;
    /** Format: character varying */
    opensea?: string;
    /** Format: character varying */
    twitter?: string;
    /** Format: bigint */
    twitterFollowers: number;
    /** Format: character varying */
    youtube?: string;
    /** Format: bigint */
    discordMembersChange: number;
    /** Format: bigint */
    discordPresenseMembers: number;
    /** Format: bigint */
    discordPresenseMembersChange: number;
    /** Format: bigint */
    twitterFollowersChange: number;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    user?: string;
    /** Format: character varying */
    contactHref?: string;
    /**
     * Format: boolean
     * @default false
     */
    partner?: boolean;
  };
  twitterFriends: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    user?: string;
    /** Format: character varying */
    twitterFriendName?: string;
  };
  walletAddresses: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    user: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    walletAddress: string;
  };
  feedbacks: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: text */
    text?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    profile?: string;
  };
  wallets: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    address?: string;
    /** Format: text */
    balance_eth?: string;
  };
  directus_presets: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: character varying */
    bookmark?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `directus_users.id`.<fk table='directus_users' column='id'/>
     */
    user?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `directus_roles.id`.<fk table='directus_roles' column='id'/>
     */
    role?: string;
    /** Format: character varying */
    collection?: string;
    /** Format: character varying */
    search?: string;
    /**
     * Format: character varying
     * @default tabular
     */
    layout?: string;
    /** Format: json */
    layout_query?: unknown;
    /** Format: json */
    layout_options?: unknown;
    /** Format: integer */
    refresh_interval?: number;
    /** Format: json */
    filter?: unknown;
    /**
     * Format: character varying
     * @default bookmark_outline
     */
    icon: string;
    /** Format: character varying */
    color?: string;
  };
  directus_revisions: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: integer
     * @description Note:
     * This is a Foreign Key to `directus_activity.id`.<fk table='directus_activity' column='id'/>
     */
    activity: number;
    /** Format: character varying */
    collection: string;
    /** Format: character varying */
    item: string;
    /** Format: json */
    data?: unknown;
    /** Format: json */
    delta?: unknown;
    /**
     * Format: integer
     * @description Note:
     * This is a Foreign Key to `directus_revisions.id`.<fk table='directus_revisions' column='id'/>
     */
    parent?: number;
  };
  influencers: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    createdAt?: string;
    /** Format: character varying */
    name?: string;
    /** Format: text */
    description?: string;
    /** Format: character varying */
    url?: string;
    /** Format: character varying */
    twitter?: string;
    /** Format: character varying */
    discord?: string;
    /** Format: character varying */
    telegram?: string;
    /** Format: character varying */
    kakao?: string;
    /** Format: character varying */
    blog?: string;
    /** Format: bigint */
    twitterFollowers: number;
    /** Format: bigint */
    discordMembers: number;
    /** Format: character varying */
    thumbnail?: string;
    /** Format: character varying */
    facebook?: string;
    /** Format: character varying */
    instagram?: string;
    /** Format: character varying */
    magiceden?: string;
    /** Format: character varying */
    opensea?: string;
    /** Format: json */
    otherSocialAccounts: unknown;
    /** Format: bigint */
    power: number;
    /** Format: character varying */
    youtube?: string;
    /** Format: character varying */
    shortDescription?: string;
    /**
     * Format: character varying
     * @default
     */
    urlName: string;
    /** Format: bigint */
    discordMembersChange: number;
    /** Format: bigint */
    twitterFollowersChange: number;
    /** Format: bigint */
    discordPresenseMembers: number;
    /** Format: bigint */
    discordPresenseMembersChange: number;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    user?: string;
    /** Format: character varying */
    contactHref?: string;
    /** Format: character varying */
    contactMail?: string;
  };
  directus_roles: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: character varying */
    name: string;
    /**
     * Format: character varying
     * @default supervised_user_circle
     */
    icon: string;
    /** Format: text */
    description?: string;
    /** Format: text */
    ip_access?: string;
    /**
     * Format: boolean
     * @default false
     */
    enforce_tfa: boolean;
    /**
     * Format: boolean
     * @default false
     */
    admin_access: boolean;
    /**
     * Format: boolean
     * @default true
     */
    app_access: boolean;
  };
  raffleConditionLogHistories: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    user: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `raffles.id`.<fk table='raffles' column='id'/>
     */
    raffle: number;
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    type: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    value: string;
    /**
     * Format: boolean
     * @default false
     */
    isDone: boolean;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
  };
  subscriptions: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    createdAt?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>
     */
    project?: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `raffles.id`.<fk table='raffles' column='id'/>
     */
    raffle?: number;
    /** Format: timestamp with time zone */
    sent?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    profile?: string;
  };
  directus_sessions: {
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    token: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `directus_users.id`.<fk table='directus_users' column='id'/>
     */
    user?: string;
    /** Format: timestamp with time zone */
    expires: string;
    /** Format: character varying */
    ip?: string;
    /** Format: character varying */
    user_agent?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `directus_shares.id`.<fk table='directus_shares' column='id'/>
     */
    share?: string;
    /** Format: character varying */
    origin?: string;
  };
  directus_migrations: {
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    version: string;
    /** Format: character varying */
    name: string;
    /**
     * Format: timestamp with time zone
     * @default CURRENT_TIMESTAMP
     */
    timestamp?: string;
  };
  raffles_with_entries: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id?: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>
     */
    project?: number;
    /** Format: character varying */
    name?: string;
    /** Format: character varying */
    thumbnail?: string;
    /** Format: json */
    rewards?: unknown;
    /** Format: json */
    conditions?: unknown;
    /** Format: json */
    results?: unknown;
    /** Format: character varying */
    url?: string;
    /** Format: timestamp with time zone */
    openDatetime?: string;
    /** Format: timestamp with time zone */
    closeDatetime?: string;
    /** Format: timestamp with time zone */
    createdAt?: string;
    /** Format: character varying */
    vender?: string;
    /** Format: boolean */
    isRaffleOriginal?: boolean;
    /** Format: boolean */
    isEnded?: boolean;
    /** Format: text */
    description?: string;
    /** Format: character varying */
    type?: string;
    /** Format: integer */
    duration?: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `influencers.id`.<fk table='influencers' column='id'/>
     */
    influencer?: number;
    /** Format: character varying */
    tweetUrl?: string;
    /** Format: boolean */
    getTelegramName?: boolean;
    /** Format: boolean */
    getTwitterName?: boolean;
    /** Format: boolean */
    getDiscordName?: boolean;
    /** Format: boolean */
    getWalletAddress?: boolean;
    /** Format: json */
    others?: unknown;
    /** Format: text */
    resultContent?: string;
    /** Format: boolean */
    isPublished?: boolean;
    /** Format: boolean */
    showGetDiscordName?: boolean;
    /** Format: boolean */
    showGetTelegramName?: boolean;
    /** Format: boolean */
    showGetTwitterName?: boolean;
    /** Format: boolean */
    showGetWalletAddress?: boolean;
    /** Format: character varying */
    walletType?: string;
    /** Format: json */
    additionalForms?: unknown;
    /** Format: text */
    submitDescription?: string;
    /** Format: boolean */
    isDescriptionHtml?: boolean;
    /** Format: text */
    description_ko?: string;
    /** Format: json */
    tweetMedia?: unknown;
    /** Format: boolean */
    isTest?: boolean;
    /** Format: text */
    savedTweet?: string;
    /** Format: timestamp with time zone */
    reservedTweetDatetime?: string;
    /** Format: boolean */
    tweetPublished?: boolean;
    /** Format: text */
    submitDescription_ko?: string;
    /** Format: text */
    resultContent_ko?: string;
    /** Format: character varying */
    name_ko?: string;
    /** Format: boolean */
    isDeleted?: boolean;
    /** Format: bigint */
    numOfEntries?: number;
  };
  directus_permissions: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `directus_roles.id`.<fk table='directus_roles' column='id'/>
     */
    role?: string;
    /** Format: character varying */
    collection: string;
    /** Format: character varying */
    action: string;
    /** Format: json */
    permissions?: unknown;
    /** Format: json */
    validation?: unknown;
    /** Format: json */
    presets?: unknown;
    /** Format: text */
    fields?: string;
  };
  directus_flows: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: character varying */
    name: string;
    /** Format: character varying */
    icon?: string;
    /** Format: character varying */
    color?: string;
    /** Format: text */
    description?: string;
    /**
     * Format: character varying
     * @default active
     */
    status: string;
    /** Format: character varying */
    trigger?: string;
    /**
     * Format: character varying
     * @default all
     */
    accountability?: string;
    /** Format: json */
    options?: unknown;
    /** Format: uuid */
    operation?: string;
    /**
     * Format: timestamp with time zone
     * @default CURRENT_TIMESTAMP
     */
    date_created?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `directus_users.id`.<fk table='directus_users' column='id'/>
     */
    user_created?: string;
  };
  metricHistories: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>
     */
    project: number;
    /** Format: integer */
    twitterFollowers: number;
    /** Format: integer */
    discordMembers: number;
    /** Format: timestamp with time zone */
    datetime: string;
    /** Format: integer */
    discordPresenseMembers: number;
  };
  raffleParticipations: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    user: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `raffles.id`.<fk table='raffles' column='id'/>
     */
    raffle: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
  };
  directus_fields: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: character varying */
    collection: string;
    /** Format: character varying */
    field: string;
    /** Format: character varying */
    special?: string;
    /** Format: character varying */
    interface?: string;
    /** Format: json */
    options?: unknown;
    /** Format: character varying */
    display?: string;
    /** Format: json */
    display_options?: unknown;
    /**
     * Format: boolean
     * @default false
     */
    readonly: boolean;
    /**
     * Format: boolean
     * @default false
     */
    hidden: boolean;
    /** Format: integer */
    sort?: number;
    /**
     * Format: character varying
     * @default full
     */
    width?: string;
    /** Format: json */
    translations?: unknown;
    /** Format: text */
    note?: string;
    /** Format: json */
    conditions?: unknown;
    /**
     * Format: boolean
     * @default false
     */
    required?: boolean;
    /** Format: character varying */
    group?: string;
    /** Format: json */
    validation?: unknown;
    /** Format: text */
    validation_message?: string;
  };
  twitterTokenV1: {
    /** Format: uuid */
    user_id: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `influencers.id`.<fk table='influencers' column='id'/>
     */
    influencer_id?: number;
    /** Format: character varying */
    token?: string;
    /** Format: character varying */
    secret?: string;
    /** Format: character varying */
    twitterId?: string;
    /** Format: character varying */
    twitterName?: string;
    /** Format: character varying */
    twitterUsername?: string;
    /** Format: character varying */
    twitterThumbnail?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    createdAt?: string;
    /**
     * Format: integer
     * @default 24
     */
    hourLimit?: number;
    /** Format: timestamp with time zone */
    lastVisited?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
  };
  raffleEntries: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    user?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `raffles.id`.<fk table='raffles' column='id'/>
     */
    raffle?: number;
    /** Format: character varying */
    twitterName?: string;
    /** Format: character varying */
    walletAddress?: string;
    /** Format: character varying */
    discordName?: string;
    /** Format: character varying */
    telegramName?: string;
    /**
     * Format: boolean
     * @default false
     */
    isWinner: boolean;
    /**
     * Format: boolean
     * @default false
     */
    invalidated: boolean;
    /**
     * Format: character varying
     * @default none
     */
    status: string;
    /** Format: json */
    additionalForms?: unknown;
  };
  directus_shares: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: character varying */
    name?: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `directus_collections.collection`.<fk table='directus_collections' column='collection'/>
     */
    collection?: string;
    /** Format: character varying */
    item?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `directus_roles.id`.<fk table='directus_roles' column='id'/>
     */
    role?: string;
    /** Format: character varying */
    password?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `directus_users.id`.<fk table='directus_users' column='id'/>
     */
    user_created?: string;
    /**
     * Format: timestamp with time zone
     * @default CURRENT_TIMESTAMP
     */
    date_created?: string;
    /** Format: timestamp with time zone */
    date_start?: string;
    /** Format: timestamp with time zone */
    date_end?: string;
    /**
     * Format: integer
     * @default 0
     */
    times_used?: number;
    /** Format: integer */
    max_uses?: number;
  };
  directus_webhooks: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: character varying */
    name: string;
    /**
     * Format: character varying
     * @default POST
     */
    method: string;
    /** Format: character varying */
    url: string;
    /**
     * Format: character varying
     * @default active
     */
    status: string;
    /**
     * Format: boolean
     * @default true
     */
    data: boolean;
    /** Format: character varying */
    actions: string;
    /** Format: character varying */
    collections: string;
    /** Format: json */
    headers?: unknown;
  };
  directus_settings: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: character varying
     * @default Directus
     */
    project_name: string;
    /** Format: character varying */
    project_url?: string;
    /**
     * Format: character varying
     * @default NULL
     */
    project_color?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `directus_files.id`.<fk table='directus_files' column='id'/>
     */
    project_logo?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `directus_files.id`.<fk table='directus_files' column='id'/>
     */
    public_foreground?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `directus_files.id`.<fk table='directus_files' column='id'/>
     */
    public_background?: string;
    /** Format: text */
    public_note?: string;
    /**
     * Format: integer
     * @default 25
     */
    auth_login_attempts?: number;
    /** Format: character varying */
    auth_password_policy?: string;
    /**
     * Format: character varying
     * @default all
     */
    storage_asset_transform?: string;
    /** Format: json */
    storage_asset_presets?: unknown;
    /** Format: text */
    custom_css?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `directus_folders.id`.<fk table='directus_folders' column='id'/>
     */
    storage_default_folder?: string;
    /** Format: json */
    basemaps?: unknown;
    /** Format: character varying */
    mapbox_key?: string;
    /** Format: json */
    module_bar?: unknown;
    /** Format: character varying */
    project_descriptor?: string;
    /** Format: json */
    translation_strings?: unknown;
    /**
     * Format: character varying
     * @default en-US
     */
    default_language: string;
    /** Format: json */
    custom_aspect_ratios?: unknown;
  };
  directus_dashboards: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: character varying */
    name: string;
    /**
     * Format: character varying
     * @default dashboard
     */
    icon: string;
    /** Format: text */
    note?: string;
    /**
     * Format: timestamp with time zone
     * @default CURRENT_TIMESTAMP
     */
    date_created?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `directus_users.id`.<fk table='directus_users' column='id'/>
     */
    user_created?: string;
    /** Format: character varying */
    color?: string;
  };
  directus_collections: {
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    collection: string;
    /** Format: character varying */
    icon?: string;
    /** Format: text */
    note?: string;
    /** Format: character varying */
    display_template?: string;
    /**
     * Format: boolean
     * @default false
     */
    hidden: boolean;
    /**
     * Format: boolean
     * @default false
     */
    singleton: boolean;
    /** Format: json */
    translations?: unknown;
    /** Format: character varying */
    archive_field?: string;
    /**
     * Format: boolean
     * @default true
     */
    archive_app_filter: boolean;
    /** Format: character varying */
    archive_value?: string;
    /** Format: character varying */
    unarchive_value?: string;
    /** Format: character varying */
    sort_field?: string;
    /**
     * Format: character varying
     * @default all
     */
    accountability?: string;
    /** Format: character varying */
    color?: string;
    /** Format: json */
    item_duplication_fields?: unknown;
    /** Format: integer */
    sort?: number;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `directus_collections.collection`.<fk table='directus_collections' column='collection'/>
     */
    group?: string;
    /**
     * Format: character varying
     * @default open
     */
    collapse: string;
  };
  directus_panels: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `directus_dashboards.id`.<fk table='directus_dashboards' column='id'/>
     */
    dashboard: string;
    /** Format: character varying */
    name?: string;
    /**
     * Format: character varying
     * @default NULL
     */
    icon?: string;
    /** Format: character varying */
    color?: string;
    /**
     * Format: boolean
     * @default false
     */
    show_header: boolean;
    /** Format: text */
    note?: string;
    /** Format: character varying */
    type: string;
    /** Format: integer */
    position_x: number;
    /** Format: integer */
    position_y: number;
    /** Format: integer */
    width: number;
    /** Format: integer */
    height: number;
    /** Format: json */
    options?: unknown;
    /**
     * Format: timestamp with time zone
     * @default CURRENT_TIMESTAMP
     */
    date_created?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `directus_users.id`.<fk table='directus_users' column='id'/>
     */
    user_created?: string;
  };
  profiles: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    createdAt?: string;
    /** Format: character varying */
    username?: string;
    /** Format: character varying */
    locale?: string;
    /** Format: character varying */
    sub: string;
    /** Format: character varying */
    email: string;
    /** Format: character varying */
    provider: string;
    /**
     * Format: boolean
     * @default false
     */
    pushAgreed: boolean;
    /** Format: character varying */
    profileImg?: string;
    /**
     * Format: boolean
     * @default false
     */
    isAdmin: boolean;
    /** Format: character varying */
    discordName?: string;
    /** Format: character varying */
    telegramName?: string;
    /** Format: character varying */
    twitterName?: string;
    /** Format: character varying */
    walletAddress?: string;
  };
  directus_operations: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: character varying */
    name?: string;
    /** Format: character varying */
    key: string;
    /** Format: character varying */
    type: string;
    /** Format: integer */
    position_x: number;
    /** Format: integer */
    position_y: number;
    /** Format: json */
    options?: unknown;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `directus_operations.id`.<fk table='directus_operations' column='id'/>
     */
    resolve?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `directus_operations.id`.<fk table='directus_operations' column='id'/>
     */
    reject?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `directus_flows.id`.<fk table='directus_flows' column='id'/>
     */
    flow: string;
    /**
     * Format: timestamp with time zone
     * @default CURRENT_TIMESTAMP
     */
    date_created?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `directus_users.id`.<fk table='directus_users' column='id'/>
     */
    user_created?: string;
  };
  twitterToken: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    user: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    accessToken?: string;
    /** Format: character varying */
    refreshToken?: string;
    /** Format: character varying */
    twitter_id?: string;
    /** Format: character varying */
    twitter_name?: string;
    /** Format: character varying */
    twitter_username?: string;
    /** Format: bigint */
    id?: number;
  };
  discordToken: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: uuid */
    user_id: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `influencers.id`.<fk table='influencers' column='id'/>
     */
    influencer_id?: number;
    /** Format: character varying */
    access_token?: string;
    /** Format: character varying */
    expires_in?: string;
    /** Format: character varying */
    refresh_token?: string;
    /** Format: character varying */
    scope?: string;
    /** Format: character varying */
    token_type?: string;
    /** Format: character varying */
    discordId?: string;
    /** Format: character varying */
    discordUsername?: string;
    /** Format: character varying */
    discordDiscriminator?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    createdAt?: string;
    /** Format: character varying */
    discordThumbnail?: string;
    /**
     * Format: integer
     * @default 24
     */
    hourLimit?: number;
    /** Format: timestamp with time zone */
    lastVisited?: string;
  };
  directus_activity: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: character varying */
    action: string;
    /** Format: uuid */
    user?: string;
    /**
     * Format: timestamp with time zone
     * @default CURRENT_TIMESTAMP
     */
    timestamp: string;
    /** Format: character varying */
    ip?: string;
    /** Format: character varying */
    user_agent?: string;
    /** Format: character varying */
    collection: string;
    /** Format: character varying */
    item: string;
    /** Format: text */
    comment?: string;
    /** Format: character varying */
    origin?: string;
  };
  notifications: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    createdAt?: string;
    /** Format: character varying */
    title?: string;
    /** Format: character varying */
    body?: string;
    /** Format: character varying */
    avatar?: string;
    /** Format: character varying */
    link?: string;
    /** Format: uuid */
    user?: string;
    /**
     * Format: boolean
     * @default false
     */
    read: boolean;
  };
  raffles_with_influencer: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id?: number;
    /** Format: timestamp with time zone */
    createdAt?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `influencers.id`.<fk table='influencers' column='id'/>
     */
    influencer?: number;
    /** Format: boolean */
    isPublished?: boolean;
  };
  influencerMetricHistories: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: integer */
    twitterFollowers?: number;
    /** Format: integer */
    discordMembers?: number;
    /** Format: timestamp with time zone */
    datetime: string;
    /** Format: integer */
    discordPresenseMembers?: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `influencers.id`.<fk table='influencers' column='id'/>
     */
    influencer?: number;
  };
  raffles: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>
     */
    project?: number;
    /** Format: character varying */
    name?: string;
    /** Format: character varying */
    thumbnail?: string;
    /** Format: json */
    rewards?: unknown;
    /** Format: json */
    conditions?: unknown;
    /** Format: json */
    results?: unknown;
    /** Format: character varying */
    url?: string;
    /** Format: timestamp with time zone */
    openDatetime?: string;
    /** Format: timestamp with time zone */
    closeDatetime?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    createdAt?: string;
    /** Format: character varying */
    vender?: string;
    /**
     * Format: boolean
     * @default false
     */
    isRaffleOriginal: boolean;
    /**
     * Format: boolean
     * @default false
     */
    isEnded?: boolean;
    /** Format: text */
    description?: string;
    /**
     * Format: character varying
     * @default other
     */
    type: string;
    /**
     * Format: integer
     * @default 0
     */
    duration: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `influencers.id`.<fk table='influencers' column='id'/>
     */
    influencer?: number;
    /** Format: character varying */
    tweetUrl?: string;
    /**
     * Format: boolean
     * @default false
     */
    getTelegramName: boolean;
    /**
     * Format: boolean
     * @default false
     */
    getTwitterName: boolean;
    /**
     * Format: boolean
     * @default false
     */
    getDiscordName: boolean;
    /**
     * Format: boolean
     * @default true
     */
    getWalletAddress: boolean;
    /** Format: json */
    others?: unknown;
    /** Format: text */
    resultContent?: string;
    /**
     * Format: boolean
     * @default false
     */
    isPublished: boolean;
    /**
     * Format: boolean
     * @default false
     */
    showGetDiscordName?: boolean;
    /**
     * Format: boolean
     * @default false
     */
    showGetTelegramName?: boolean;
    /**
     * Format: boolean
     * @default false
     */
    showGetTwitterName?: boolean;
    /**
     * Format: boolean
     * @default false
     */
    showGetWalletAddress?: boolean;
    /** Format: character varying */
    walletType?: string;
    /** Format: json */
    additionalForms?: unknown;
    /** Format: text */
    submitDescription?: string;
    /**
     * Format: boolean
     * @default false
     */
    isDescriptionHtml: boolean;
    /** Format: text */
    description_ko?: string;
    /** Format: json */
    tweetMedia?: unknown;
    /**
     * Format: boolean
     * @default false
     */
    isTest: boolean;
    /** Format: text */
    savedTweet?: string;
    /** Format: timestamp with time zone */
    reservedTweetDatetime?: string;
    /**
     * Format: boolean
     * @default false
     */
    tweetPublished: boolean;
    /** Format: text */
    submitDescription_ko?: string;
    /** Format: text */
    resultContent_ko?: string;
    /** Format: character varying */
    name_ko?: string;
    /**
     * Format: boolean
     * @default false
     */
    isDeleted: boolean;
  };
  directus_notifications: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default CURRENT_TIMESTAMP
     */
    timestamp?: string;
    /**
     * Format: character varying
     * @default inbox
     */
    status?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `directus_users.id`.<fk table='directus_users' column='id'/>
     */
    recipient: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `directus_users.id`.<fk table='directus_users' column='id'/>
     */
    sender?: string;
    /** Format: character varying */
    subject: string;
    /** Format: text */
    message?: string;
    /** Format: character varying */
    collection?: string;
    /** Format: character varying */
    item?: string;
  };
  directus_relations: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: character varying */
    many_collection: string;
    /** Format: character varying */
    many_field: string;
    /** Format: character varying */
    one_collection?: string;
    /** Format: character varying */
    one_field?: string;
    /** Format: character varying */
    one_collection_field?: string;
    /** Format: text */
    one_allowed_collections?: string;
    /** Format: character varying */
    junction_field?: string;
    /** Format: character varying */
    sort_field?: string;
    /**
     * Format: character varying
     * @default nullify
     */
    one_deselect_action: string;
  };
  pushKeys: {
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    key: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    createdAt?: string;
    /** Format: json */
    device?: unknown;
    /** Format: uuid */
    user?: string;
  };
  raffles_with_socialmetrics: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id?: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>
     */
    project?: number;
    /** Format: character varying */
    name?: string;
    /** Format: character varying */
    thumbnail?: string;
    /** Format: json */
    rewards?: unknown;
    /** Format: json */
    conditions?: unknown;
    /** Format: json */
    results?: unknown;
    /** Format: character varying */
    url?: string;
    /** Format: timestamp with time zone */
    openDatetime?: string;
    /** Format: timestamp with time zone */
    closeDatetime?: string;
    /** Format: timestamp with time zone */
    createdAt?: string;
    /** Format: character varying */
    vender?: string;
    /** Format: boolean */
    isRaffleOriginal?: boolean;
    /** Format: boolean */
    isEnded?: boolean;
    /** Format: text */
    description?: string;
    /** Format: character varying */
    type?: string;
    /** Format: integer */
    duration?: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `influencers.id`.<fk table='influencers' column='id'/>
     */
    influencer?: number;
    /** Format: character varying */
    tweetUrl?: string;
    /** Format: boolean */
    getTelegramName?: boolean;
    /** Format: boolean */
    getTwitterName?: boolean;
    /** Format: boolean */
    getDiscordName?: boolean;
    /** Format: boolean */
    getWalletAddress?: boolean;
    /** Format: json */
    others?: unknown;
    /** Format: text */
    resultContent?: string;
    /** Format: boolean */
    isPublished?: boolean;
    /** Format: boolean */
    showGetDiscordName?: boolean;
    /** Format: boolean */
    showGetTelegramName?: boolean;
    /** Format: boolean */
    showGetTwitterName?: boolean;
    /** Format: boolean */
    showGetWalletAddress?: boolean;
    /** Format: character varying */
    walletType?: string;
    /** Format: json */
    additionalForms?: unknown;
    /** Format: text */
    submitDescription?: string;
    /** Format: boolean */
    isDescriptionHtml?: boolean;
    /** Format: text */
    description_ko?: string;
    /** Format: json */
    tweetMedia?: unknown;
    /** Format: boolean */
    isTest?: boolean;
    /** Format: text */
    savedTweet?: string;
    /** Format: timestamp with time zone */
    reservedTweetDatetime?: string;
    /** Format: boolean */
    tweetPublished?: boolean;
    /** Format: text */
    submitDescription_ko?: string;
    /** Format: text */
    resultContent_ko?: string;
    /** Format: character varying */
    name_ko?: string;
    /** Format: boolean */
    isDeleted?: boolean;
    /** Format: bigint */
    twitterFollowers?: number;
    /** Format: bigint */
    twitterFollowersChange?: number;
    /** Format: bigint */
    discordMembers?: number;
    /** Format: bigint */
    discordMembersChange?: number;
    /** Format: bigint */
    discordPresenseMembers?: number;
    /** Format: bigint */
    discordPresenseMembersChange?: number;
    /** Format: json */
    socialMetrics?: unknown;
    /** Format: json */
    socialMetricsChanges?: unknown;
  };
  directus_folders: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: character varying */
    name: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `directus_folders.id`.<fk table='directus_folders' column='id'/>
     */
    parent?: string;
  };
  directus_users: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: character varying */
    first_name?: string;
    /** Format: character varying */
    last_name?: string;
    /** Format: character varying */
    email?: string;
    /** Format: character varying */
    password?: string;
    /** Format: character varying */
    location?: string;
    /** Format: character varying */
    title?: string;
    /** Format: text */
    description?: string;
    /** Format: json */
    tags?: unknown;
    /** Format: uuid */
    avatar?: string;
    /**
     * Format: character varying
     * @default NULL
     */
    language?: string;
    /**
     * Format: character varying
     * @default auto
     */
    theme?: string;
    /** Format: character varying */
    tfa_secret?: string;
    /**
     * Format: character varying
     * @default active
     */
    status: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `directus_roles.id`.<fk table='directus_roles' column='id'/>
     */
    role?: string;
    /** Format: character varying */
    token?: string;
    /** Format: timestamp with time zone */
    last_access?: string;
    /** Format: character varying */
    last_page?: string;
    /**
     * Format: character varying
     * @default default
     */
    provider: string;
    /** Format: character varying */
    external_identifier?: string;
    /** Format: json */
    auth_data?: unknown;
    /**
     * Format: boolean
     * @default true
     */
    email_notifications?: boolean;
  };
  tempForTwitterAuth: {
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: json */
    data?: unknown;
  };
  directus_files: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: character varying */
    storage: string;
    /** Format: character varying */
    filename_disk?: string;
    /** Format: character varying */
    filename_download: string;
    /** Format: character varying */
    title?: string;
    /** Format: character varying */
    type?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `directus_folders.id`.<fk table='directus_folders' column='id'/>
     */
    folder?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `directus_users.id`.<fk table='directus_users' column='id'/>
     */
    uploaded_by?: string;
    /**
     * Format: timestamp with time zone
     * @default CURRENT_TIMESTAMP
     */
    uploaded_on: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `directus_users.id`.<fk table='directus_users' column='id'/>
     */
    modified_by?: string;
    /**
     * Format: timestamp with time zone
     * @default CURRENT_TIMESTAMP
     */
    modified_on: string;
    /** Format: character varying */
    charset?: string;
    /** Format: bigint */
    filesize?: number;
    /** Format: integer */
    width?: number;
    /** Format: integer */
    height?: number;
    /** Format: integer */
    duration?: number;
    /** Format: character varying */
    embed?: string;
    /** Format: text */
    description?: string;
    /** Format: text */
    location?: string;
    /** Format: text */
    tags?: string;
    /** Format: json */
    metadata?: unknown;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description projects */
  "body.projects": definitions["projects"];
  /** Format: bigint */
  "rowFilter.projects.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.projects.createdAt": string;
  /** Format: character varying */
  "rowFilter.projects.thumbnail": string;
  /** Format: character varying */
  "rowFilter.projects.name": string;
  /** Format: text */
  "rowFilter.projects.description": string;
  /** Format: json */
  "rowFilter.projects.socialAccounts": string;
  /** Format: character varying */
  "rowFilter.projects.blockchain": string;
  /** Format: character varying */
  "rowFilter.projects.url": string;
  /** Format: json */
  "rowFilter.projects.socialMetrics": string;
  /** Format: json */
  "rowFilter.projects.socialMetricsChanges": string;
  /** Format: character varying */
  "rowFilter.projects.discord": string;
  /** Format: bigint */
  "rowFilter.projects.discordMembers": string;
  /** Format: character varying */
  "rowFilter.projects.facebook": string;
  /** Format: character varying */
  "rowFilter.projects.instagram": string;
  /** Format: character varying */
  "rowFilter.projects.kakao": string;
  /** Format: character varying */
  "rowFilter.projects.magiceden": string;
  /** Format: character varying */
  "rowFilter.projects.opensea": string;
  /** Format: character varying */
  "rowFilter.projects.twitter": string;
  /** Format: bigint */
  "rowFilter.projects.twitterFollowers": string;
  /** Format: character varying */
  "rowFilter.projects.youtube": string;
  /** Format: bigint */
  "rowFilter.projects.discordMembersChange": string;
  /** Format: bigint */
  "rowFilter.projects.discordPresenseMembers": string;
  /** Format: bigint */
  "rowFilter.projects.discordPresenseMembersChange": string;
  /** Format: bigint */
  "rowFilter.projects.twitterFollowersChange": string;
  /** Format: uuid */
  "rowFilter.projects.user": string;
  /** Format: character varying */
  "rowFilter.projects.contactHref": string;
  /** Format: boolean */
  "rowFilter.projects.partner": string;
  /** @description twitterFriends */
  "body.twitterFriends": definitions["twitterFriends"];
  /** Format: bigint */
  "rowFilter.twitterFriends.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.twitterFriends.created_at": string;
  /** Format: uuid */
  "rowFilter.twitterFriends.user": string;
  /** Format: character varying */
  "rowFilter.twitterFriends.twitterFriendName": string;
  /** @description walletAddresses */
  "body.walletAddresses": definitions["walletAddresses"];
  /** Format: uuid */
  "rowFilter.walletAddresses.user": string;
  /** Format: character varying */
  "rowFilter.walletAddresses.walletAddress": string;
  /** @description feedbacks */
  "body.feedbacks": definitions["feedbacks"];
  /** Format: bigint */
  "rowFilter.feedbacks.id": string;
  /** Format: text */
  "rowFilter.feedbacks.text": string;
  /** Format: timestamp with time zone */
  "rowFilter.feedbacks.created_at": string;
  /** Format: uuid */
  "rowFilter.feedbacks.profile": string;
  /** @description wallets */
  "body.wallets": definitions["wallets"];
  /** Format: bigint */
  "rowFilter.wallets.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.wallets.created_at": string;
  /** Format: text */
  "rowFilter.wallets.address": string;
  /** Format: text */
  "rowFilter.wallets.balance_eth": string;
  /** @description directus_presets */
  "body.directus_presets": definitions["directus_presets"];
  /** Format: integer */
  "rowFilter.directus_presets.id": string;
  /** Format: character varying */
  "rowFilter.directus_presets.bookmark": string;
  /** Format: uuid */
  "rowFilter.directus_presets.user": string;
  /** Format: uuid */
  "rowFilter.directus_presets.role": string;
  /** Format: character varying */
  "rowFilter.directus_presets.collection": string;
  /** Format: character varying */
  "rowFilter.directus_presets.search": string;
  /** Format: character varying */
  "rowFilter.directus_presets.layout": string;
  /** Format: json */
  "rowFilter.directus_presets.layout_query": string;
  /** Format: json */
  "rowFilter.directus_presets.layout_options": string;
  /** Format: integer */
  "rowFilter.directus_presets.refresh_interval": string;
  /** Format: json */
  "rowFilter.directus_presets.filter": string;
  /** Format: character varying */
  "rowFilter.directus_presets.icon": string;
  /** Format: character varying */
  "rowFilter.directus_presets.color": string;
  /** @description directus_revisions */
  "body.directus_revisions": definitions["directus_revisions"];
  /** Format: integer */
  "rowFilter.directus_revisions.id": string;
  /** Format: integer */
  "rowFilter.directus_revisions.activity": string;
  /** Format: character varying */
  "rowFilter.directus_revisions.collection": string;
  /** Format: character varying */
  "rowFilter.directus_revisions.item": string;
  /** Format: json */
  "rowFilter.directus_revisions.data": string;
  /** Format: json */
  "rowFilter.directus_revisions.delta": string;
  /** Format: integer */
  "rowFilter.directus_revisions.parent": string;
  /** @description influencers */
  "body.influencers": definitions["influencers"];
  /** Format: bigint */
  "rowFilter.influencers.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.influencers.createdAt": string;
  /** Format: character varying */
  "rowFilter.influencers.name": string;
  /** Format: text */
  "rowFilter.influencers.description": string;
  /** Format: character varying */
  "rowFilter.influencers.url": string;
  /** Format: character varying */
  "rowFilter.influencers.twitter": string;
  /** Format: character varying */
  "rowFilter.influencers.discord": string;
  /** Format: character varying */
  "rowFilter.influencers.telegram": string;
  /** Format: character varying */
  "rowFilter.influencers.kakao": string;
  /** Format: character varying */
  "rowFilter.influencers.blog": string;
  /** Format: bigint */
  "rowFilter.influencers.twitterFollowers": string;
  /** Format: bigint */
  "rowFilter.influencers.discordMembers": string;
  /** Format: character varying */
  "rowFilter.influencers.thumbnail": string;
  /** Format: character varying */
  "rowFilter.influencers.facebook": string;
  /** Format: character varying */
  "rowFilter.influencers.instagram": string;
  /** Format: character varying */
  "rowFilter.influencers.magiceden": string;
  /** Format: character varying */
  "rowFilter.influencers.opensea": string;
  /** Format: json */
  "rowFilter.influencers.otherSocialAccounts": string;
  /** Format: bigint */
  "rowFilter.influencers.power": string;
  /** Format: character varying */
  "rowFilter.influencers.youtube": string;
  /** Format: character varying */
  "rowFilter.influencers.shortDescription": string;
  /** Format: character varying */
  "rowFilter.influencers.urlName": string;
  /** Format: bigint */
  "rowFilter.influencers.discordMembersChange": string;
  /** Format: bigint */
  "rowFilter.influencers.twitterFollowersChange": string;
  /** Format: bigint */
  "rowFilter.influencers.discordPresenseMembers": string;
  /** Format: bigint */
  "rowFilter.influencers.discordPresenseMembersChange": string;
  /** Format: uuid */
  "rowFilter.influencers.user": string;
  /** Format: character varying */
  "rowFilter.influencers.contactHref": string;
  /** Format: character varying */
  "rowFilter.influencers.contactMail": string;
  /** @description directus_roles */
  "body.directus_roles": definitions["directus_roles"];
  /** Format: uuid */
  "rowFilter.directus_roles.id": string;
  /** Format: character varying */
  "rowFilter.directus_roles.name": string;
  /** Format: character varying */
  "rowFilter.directus_roles.icon": string;
  /** Format: text */
  "rowFilter.directus_roles.description": string;
  /** Format: text */
  "rowFilter.directus_roles.ip_access": string;
  /** Format: boolean */
  "rowFilter.directus_roles.enforce_tfa": string;
  /** Format: boolean */
  "rowFilter.directus_roles.admin_access": string;
  /** Format: boolean */
  "rowFilter.directus_roles.app_access": string;
  /** @description raffleConditionLogHistories */
  "body.raffleConditionLogHistories": definitions["raffleConditionLogHistories"];
  /** Format: uuid */
  "rowFilter.raffleConditionLogHistories.user": string;
  /** Format: bigint */
  "rowFilter.raffleConditionLogHistories.raffle": string;
  /** Format: character varying */
  "rowFilter.raffleConditionLogHistories.type": string;
  /** Format: character varying */
  "rowFilter.raffleConditionLogHistories.value": string;
  /** Format: boolean */
  "rowFilter.raffleConditionLogHistories.isDone": string;
  /** Format: timestamp with time zone */
  "rowFilter.raffleConditionLogHistories.created_at": string;
  /** @description subscriptions */
  "body.subscriptions": definitions["subscriptions"];
  /** Format: bigint */
  "rowFilter.subscriptions.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.subscriptions.createdAt": string;
  /** Format: bigint */
  "rowFilter.subscriptions.project": string;
  /** Format: bigint */
  "rowFilter.subscriptions.raffle": string;
  /** Format: timestamp with time zone */
  "rowFilter.subscriptions.sent": string;
  /** Format: uuid */
  "rowFilter.subscriptions.profile": string;
  /** @description directus_sessions */
  "body.directus_sessions": definitions["directus_sessions"];
  /** Format: character varying */
  "rowFilter.directus_sessions.token": string;
  /** Format: uuid */
  "rowFilter.directus_sessions.user": string;
  /** Format: timestamp with time zone */
  "rowFilter.directus_sessions.expires": string;
  /** Format: character varying */
  "rowFilter.directus_sessions.ip": string;
  /** Format: character varying */
  "rowFilter.directus_sessions.user_agent": string;
  /** Format: uuid */
  "rowFilter.directus_sessions.share": string;
  /** Format: character varying */
  "rowFilter.directus_sessions.origin": string;
  /** @description directus_migrations */
  "body.directus_migrations": definitions["directus_migrations"];
  /** Format: character varying */
  "rowFilter.directus_migrations.version": string;
  /** Format: character varying */
  "rowFilter.directus_migrations.name": string;
  /** Format: timestamp with time zone */
  "rowFilter.directus_migrations.timestamp": string;
  /** @description raffles_with_entries */
  "body.raffles_with_entries": definitions["raffles_with_entries"];
  /** Format: bigint */
  "rowFilter.raffles_with_entries.id": string;
  /** Format: bigint */
  "rowFilter.raffles_with_entries.project": string;
  /** Format: character varying */
  "rowFilter.raffles_with_entries.name": string;
  /** Format: character varying */
  "rowFilter.raffles_with_entries.thumbnail": string;
  /** Format: json */
  "rowFilter.raffles_with_entries.rewards": string;
  /** Format: json */
  "rowFilter.raffles_with_entries.conditions": string;
  /** Format: json */
  "rowFilter.raffles_with_entries.results": string;
  /** Format: character varying */
  "rowFilter.raffles_with_entries.url": string;
  /** Format: timestamp with time zone */
  "rowFilter.raffles_with_entries.openDatetime": string;
  /** Format: timestamp with time zone */
  "rowFilter.raffles_with_entries.closeDatetime": string;
  /** Format: timestamp with time zone */
  "rowFilter.raffles_with_entries.createdAt": string;
  /** Format: character varying */
  "rowFilter.raffles_with_entries.vender": string;
  /** Format: boolean */
  "rowFilter.raffles_with_entries.isRaffleOriginal": string;
  /** Format: boolean */
  "rowFilter.raffles_with_entries.isEnded": string;
  /** Format: text */
  "rowFilter.raffles_with_entries.description": string;
  /** Format: character varying */
  "rowFilter.raffles_with_entries.type": string;
  /** Format: integer */
  "rowFilter.raffles_with_entries.duration": string;
  /** Format: bigint */
  "rowFilter.raffles_with_entries.influencer": string;
  /** Format: character varying */
  "rowFilter.raffles_with_entries.tweetUrl": string;
  /** Format: boolean */
  "rowFilter.raffles_with_entries.getTelegramName": string;
  /** Format: boolean */
  "rowFilter.raffles_with_entries.getTwitterName": string;
  /** Format: boolean */
  "rowFilter.raffles_with_entries.getDiscordName": string;
  /** Format: boolean */
  "rowFilter.raffles_with_entries.getWalletAddress": string;
  /** Format: json */
  "rowFilter.raffles_with_entries.others": string;
  /** Format: text */
  "rowFilter.raffles_with_entries.resultContent": string;
  /** Format: boolean */
  "rowFilter.raffles_with_entries.isPublished": string;
  /** Format: boolean */
  "rowFilter.raffles_with_entries.showGetDiscordName": string;
  /** Format: boolean */
  "rowFilter.raffles_with_entries.showGetTelegramName": string;
  /** Format: boolean */
  "rowFilter.raffles_with_entries.showGetTwitterName": string;
  /** Format: boolean */
  "rowFilter.raffles_with_entries.showGetWalletAddress": string;
  /** Format: character varying */
  "rowFilter.raffles_with_entries.walletType": string;
  /** Format: json */
  "rowFilter.raffles_with_entries.additionalForms": string;
  /** Format: text */
  "rowFilter.raffles_with_entries.submitDescription": string;
  /** Format: boolean */
  "rowFilter.raffles_with_entries.isDescriptionHtml": string;
  /** Format: text */
  "rowFilter.raffles_with_entries.description_ko": string;
  /** Format: json */
  "rowFilter.raffles_with_entries.tweetMedia": string;
  /** Format: boolean */
  "rowFilter.raffles_with_entries.isTest": string;
  /** Format: text */
  "rowFilter.raffles_with_entries.savedTweet": string;
  /** Format: timestamp with time zone */
  "rowFilter.raffles_with_entries.reservedTweetDatetime": string;
  /** Format: boolean */
  "rowFilter.raffles_with_entries.tweetPublished": string;
  /** Format: text */
  "rowFilter.raffles_with_entries.submitDescription_ko": string;
  /** Format: text */
  "rowFilter.raffles_with_entries.resultContent_ko": string;
  /** Format: character varying */
  "rowFilter.raffles_with_entries.name_ko": string;
  /** Format: boolean */
  "rowFilter.raffles_with_entries.isDeleted": string;
  /** Format: bigint */
  "rowFilter.raffles_with_entries.numOfEntries": string;
  /** @description directus_permissions */
  "body.directus_permissions": definitions["directus_permissions"];
  /** Format: integer */
  "rowFilter.directus_permissions.id": string;
  /** Format: uuid */
  "rowFilter.directus_permissions.role": string;
  /** Format: character varying */
  "rowFilter.directus_permissions.collection": string;
  /** Format: character varying */
  "rowFilter.directus_permissions.action": string;
  /** Format: json */
  "rowFilter.directus_permissions.permissions": string;
  /** Format: json */
  "rowFilter.directus_permissions.validation": string;
  /** Format: json */
  "rowFilter.directus_permissions.presets": string;
  /** Format: text */
  "rowFilter.directus_permissions.fields": string;
  /** @description directus_flows */
  "body.directus_flows": definitions["directus_flows"];
  /** Format: uuid */
  "rowFilter.directus_flows.id": string;
  /** Format: character varying */
  "rowFilter.directus_flows.name": string;
  /** Format: character varying */
  "rowFilter.directus_flows.icon": string;
  /** Format: character varying */
  "rowFilter.directus_flows.color": string;
  /** Format: text */
  "rowFilter.directus_flows.description": string;
  /** Format: character varying */
  "rowFilter.directus_flows.status": string;
  /** Format: character varying */
  "rowFilter.directus_flows.trigger": string;
  /** Format: character varying */
  "rowFilter.directus_flows.accountability": string;
  /** Format: json */
  "rowFilter.directus_flows.options": string;
  /** Format: uuid */
  "rowFilter.directus_flows.operation": string;
  /** Format: timestamp with time zone */
  "rowFilter.directus_flows.date_created": string;
  /** Format: uuid */
  "rowFilter.directus_flows.user_created": string;
  /** @description metricHistories */
  "body.metricHistories": definitions["metricHistories"];
  /** Format: bigint */
  "rowFilter.metricHistories.id": string;
  /** Format: bigint */
  "rowFilter.metricHistories.project": string;
  /** Format: integer */
  "rowFilter.metricHistories.twitterFollowers": string;
  /** Format: integer */
  "rowFilter.metricHistories.discordMembers": string;
  /** Format: timestamp with time zone */
  "rowFilter.metricHistories.datetime": string;
  /** Format: integer */
  "rowFilter.metricHistories.discordPresenseMembers": string;
  /** @description raffleParticipations */
  "body.raffleParticipations": definitions["raffleParticipations"];
  /** Format: uuid */
  "rowFilter.raffleParticipations.user": string;
  /** Format: bigint */
  "rowFilter.raffleParticipations.raffle": string;
  /** Format: timestamp with time zone */
  "rowFilter.raffleParticipations.created_at": string;
  /** @description directus_fields */
  "body.directus_fields": definitions["directus_fields"];
  /** Format: integer */
  "rowFilter.directus_fields.id": string;
  /** Format: character varying */
  "rowFilter.directus_fields.collection": string;
  /** Format: character varying */
  "rowFilter.directus_fields.field": string;
  /** Format: character varying */
  "rowFilter.directus_fields.special": string;
  /** Format: character varying */
  "rowFilter.directus_fields.interface": string;
  /** Format: json */
  "rowFilter.directus_fields.options": string;
  /** Format: character varying */
  "rowFilter.directus_fields.display": string;
  /** Format: json */
  "rowFilter.directus_fields.display_options": string;
  /** Format: boolean */
  "rowFilter.directus_fields.readonly": string;
  /** Format: boolean */
  "rowFilter.directus_fields.hidden": string;
  /** Format: integer */
  "rowFilter.directus_fields.sort": string;
  /** Format: character varying */
  "rowFilter.directus_fields.width": string;
  /** Format: json */
  "rowFilter.directus_fields.translations": string;
  /** Format: text */
  "rowFilter.directus_fields.note": string;
  /** Format: json */
  "rowFilter.directus_fields.conditions": string;
  /** Format: boolean */
  "rowFilter.directus_fields.required": string;
  /** Format: character varying */
  "rowFilter.directus_fields.group": string;
  /** Format: json */
  "rowFilter.directus_fields.validation": string;
  /** Format: text */
  "rowFilter.directus_fields.validation_message": string;
  /** @description twitterTokenV1 */
  "body.twitterTokenV1": definitions["twitterTokenV1"];
  /** Format: uuid */
  "rowFilter.twitterTokenV1.user_id": string;
  /** Format: bigint */
  "rowFilter.twitterTokenV1.influencer_id": string;
  /** Format: character varying */
  "rowFilter.twitterTokenV1.token": string;
  /** Format: character varying */
  "rowFilter.twitterTokenV1.secret": string;
  /** Format: character varying */
  "rowFilter.twitterTokenV1.twitterId": string;
  /** Format: character varying */
  "rowFilter.twitterTokenV1.twitterName": string;
  /** Format: character varying */
  "rowFilter.twitterTokenV1.twitterUsername": string;
  /** Format: character varying */
  "rowFilter.twitterTokenV1.twitterThumbnail": string;
  /** Format: timestamp with time zone */
  "rowFilter.twitterTokenV1.createdAt": string;
  /** Format: integer */
  "rowFilter.twitterTokenV1.hourLimit": string;
  /** Format: timestamp with time zone */
  "rowFilter.twitterTokenV1.lastVisited": string;
  /** Format: bigint */
  "rowFilter.twitterTokenV1.id": string;
  /** @description raffleEntries */
  "body.raffleEntries": definitions["raffleEntries"];
  /** Format: bigint */
  "rowFilter.raffleEntries.id": string;
  /** Format: uuid */
  "rowFilter.raffleEntries.user": string;
  /** Format: timestamp with time zone */
  "rowFilter.raffleEntries.created_at": string;
  /** Format: bigint */
  "rowFilter.raffleEntries.raffle": string;
  /** Format: character varying */
  "rowFilter.raffleEntries.twitterName": string;
  /** Format: character varying */
  "rowFilter.raffleEntries.walletAddress": string;
  /** Format: character varying */
  "rowFilter.raffleEntries.discordName": string;
  /** Format: character varying */
  "rowFilter.raffleEntries.telegramName": string;
  /** Format: boolean */
  "rowFilter.raffleEntries.isWinner": string;
  /** Format: boolean */
  "rowFilter.raffleEntries.invalidated": string;
  /** Format: character varying */
  "rowFilter.raffleEntries.status": string;
  /** Format: json */
  "rowFilter.raffleEntries.additionalForms": string;
  /** @description directus_shares */
  "body.directus_shares": definitions["directus_shares"];
  /** Format: uuid */
  "rowFilter.directus_shares.id": string;
  /** Format: character varying */
  "rowFilter.directus_shares.name": string;
  /** Format: character varying */
  "rowFilter.directus_shares.collection": string;
  /** Format: character varying */
  "rowFilter.directus_shares.item": string;
  /** Format: uuid */
  "rowFilter.directus_shares.role": string;
  /** Format: character varying */
  "rowFilter.directus_shares.password": string;
  /** Format: uuid */
  "rowFilter.directus_shares.user_created": string;
  /** Format: timestamp with time zone */
  "rowFilter.directus_shares.date_created": string;
  /** Format: timestamp with time zone */
  "rowFilter.directus_shares.date_start": string;
  /** Format: timestamp with time zone */
  "rowFilter.directus_shares.date_end": string;
  /** Format: integer */
  "rowFilter.directus_shares.times_used": string;
  /** Format: integer */
  "rowFilter.directus_shares.max_uses": string;
  /** @description directus_webhooks */
  "body.directus_webhooks": definitions["directus_webhooks"];
  /** Format: integer */
  "rowFilter.directus_webhooks.id": string;
  /** Format: character varying */
  "rowFilter.directus_webhooks.name": string;
  /** Format: character varying */
  "rowFilter.directus_webhooks.method": string;
  /** Format: character varying */
  "rowFilter.directus_webhooks.url": string;
  /** Format: character varying */
  "rowFilter.directus_webhooks.status": string;
  /** Format: boolean */
  "rowFilter.directus_webhooks.data": string;
  /** Format: character varying */
  "rowFilter.directus_webhooks.actions": string;
  /** Format: character varying */
  "rowFilter.directus_webhooks.collections": string;
  /** Format: json */
  "rowFilter.directus_webhooks.headers": string;
  /** @description directus_settings */
  "body.directus_settings": definitions["directus_settings"];
  /** Format: integer */
  "rowFilter.directus_settings.id": string;
  /** Format: character varying */
  "rowFilter.directus_settings.project_name": string;
  /** Format: character varying */
  "rowFilter.directus_settings.project_url": string;
  /** Format: character varying */
  "rowFilter.directus_settings.project_color": string;
  /** Format: uuid */
  "rowFilter.directus_settings.project_logo": string;
  /** Format: uuid */
  "rowFilter.directus_settings.public_foreground": string;
  /** Format: uuid */
  "rowFilter.directus_settings.public_background": string;
  /** Format: text */
  "rowFilter.directus_settings.public_note": string;
  /** Format: integer */
  "rowFilter.directus_settings.auth_login_attempts": string;
  /** Format: character varying */
  "rowFilter.directus_settings.auth_password_policy": string;
  /** Format: character varying */
  "rowFilter.directus_settings.storage_asset_transform": string;
  /** Format: json */
  "rowFilter.directus_settings.storage_asset_presets": string;
  /** Format: text */
  "rowFilter.directus_settings.custom_css": string;
  /** Format: uuid */
  "rowFilter.directus_settings.storage_default_folder": string;
  /** Format: json */
  "rowFilter.directus_settings.basemaps": string;
  /** Format: character varying */
  "rowFilter.directus_settings.mapbox_key": string;
  /** Format: json */
  "rowFilter.directus_settings.module_bar": string;
  /** Format: character varying */
  "rowFilter.directus_settings.project_descriptor": string;
  /** Format: json */
  "rowFilter.directus_settings.translation_strings": string;
  /** Format: character varying */
  "rowFilter.directus_settings.default_language": string;
  /** Format: json */
  "rowFilter.directus_settings.custom_aspect_ratios": string;
  /** @description directus_dashboards */
  "body.directus_dashboards": definitions["directus_dashboards"];
  /** Format: uuid */
  "rowFilter.directus_dashboards.id": string;
  /** Format: character varying */
  "rowFilter.directus_dashboards.name": string;
  /** Format: character varying */
  "rowFilter.directus_dashboards.icon": string;
  /** Format: text */
  "rowFilter.directus_dashboards.note": string;
  /** Format: timestamp with time zone */
  "rowFilter.directus_dashboards.date_created": string;
  /** Format: uuid */
  "rowFilter.directus_dashboards.user_created": string;
  /** Format: character varying */
  "rowFilter.directus_dashboards.color": string;
  /** @description directus_collections */
  "body.directus_collections": definitions["directus_collections"];
  /** Format: character varying */
  "rowFilter.directus_collections.collection": string;
  /** Format: character varying */
  "rowFilter.directus_collections.icon": string;
  /** Format: text */
  "rowFilter.directus_collections.note": string;
  /** Format: character varying */
  "rowFilter.directus_collections.display_template": string;
  /** Format: boolean */
  "rowFilter.directus_collections.hidden": string;
  /** Format: boolean */
  "rowFilter.directus_collections.singleton": string;
  /** Format: json */
  "rowFilter.directus_collections.translations": string;
  /** Format: character varying */
  "rowFilter.directus_collections.archive_field": string;
  /** Format: boolean */
  "rowFilter.directus_collections.archive_app_filter": string;
  /** Format: character varying */
  "rowFilter.directus_collections.archive_value": string;
  /** Format: character varying */
  "rowFilter.directus_collections.unarchive_value": string;
  /** Format: character varying */
  "rowFilter.directus_collections.sort_field": string;
  /** Format: character varying */
  "rowFilter.directus_collections.accountability": string;
  /** Format: character varying */
  "rowFilter.directus_collections.color": string;
  /** Format: json */
  "rowFilter.directus_collections.item_duplication_fields": string;
  /** Format: integer */
  "rowFilter.directus_collections.sort": string;
  /** Format: character varying */
  "rowFilter.directus_collections.group": string;
  /** Format: character varying */
  "rowFilter.directus_collections.collapse": string;
  /** @description directus_panels */
  "body.directus_panels": definitions["directus_panels"];
  /** Format: uuid */
  "rowFilter.directus_panels.id": string;
  /** Format: uuid */
  "rowFilter.directus_panels.dashboard": string;
  /** Format: character varying */
  "rowFilter.directus_panels.name": string;
  /** Format: character varying */
  "rowFilter.directus_panels.icon": string;
  /** Format: character varying */
  "rowFilter.directus_panels.color": string;
  /** Format: boolean */
  "rowFilter.directus_panels.show_header": string;
  /** Format: text */
  "rowFilter.directus_panels.note": string;
  /** Format: character varying */
  "rowFilter.directus_panels.type": string;
  /** Format: integer */
  "rowFilter.directus_panels.position_x": string;
  /** Format: integer */
  "rowFilter.directus_panels.position_y": string;
  /** Format: integer */
  "rowFilter.directus_panels.width": string;
  /** Format: integer */
  "rowFilter.directus_panels.height": string;
  /** Format: json */
  "rowFilter.directus_panels.options": string;
  /** Format: timestamp with time zone */
  "rowFilter.directus_panels.date_created": string;
  /** Format: uuid */
  "rowFilter.directus_panels.user_created": string;
  /** @description profiles */
  "body.profiles": definitions["profiles"];
  /** Format: uuid */
  "rowFilter.profiles.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.profiles.createdAt": string;
  /** Format: character varying */
  "rowFilter.profiles.username": string;
  /** Format: character varying */
  "rowFilter.profiles.locale": string;
  /** Format: character varying */
  "rowFilter.profiles.sub": string;
  /** Format: character varying */
  "rowFilter.profiles.email": string;
  /** Format: character varying */
  "rowFilter.profiles.provider": string;
  /** Format: boolean */
  "rowFilter.profiles.pushAgreed": string;
  /** Format: character varying */
  "rowFilter.profiles.profileImg": string;
  /** Format: boolean */
  "rowFilter.profiles.isAdmin": string;
  /** Format: character varying */
  "rowFilter.profiles.discordName": string;
  /** Format: character varying */
  "rowFilter.profiles.telegramName": string;
  /** Format: character varying */
  "rowFilter.profiles.twitterName": string;
  /** Format: character varying */
  "rowFilter.profiles.walletAddress": string;
  /** @description directus_operations */
  "body.directus_operations": definitions["directus_operations"];
  /** Format: uuid */
  "rowFilter.directus_operations.id": string;
  /** Format: character varying */
  "rowFilter.directus_operations.name": string;
  /** Format: character varying */
  "rowFilter.directus_operations.key": string;
  /** Format: character varying */
  "rowFilter.directus_operations.type": string;
  /** Format: integer */
  "rowFilter.directus_operations.position_x": string;
  /** Format: integer */
  "rowFilter.directus_operations.position_y": string;
  /** Format: json */
  "rowFilter.directus_operations.options": string;
  /** Format: uuid */
  "rowFilter.directus_operations.resolve": string;
  /** Format: uuid */
  "rowFilter.directus_operations.reject": string;
  /** Format: uuid */
  "rowFilter.directus_operations.flow": string;
  /** Format: timestamp with time zone */
  "rowFilter.directus_operations.date_created": string;
  /** Format: uuid */
  "rowFilter.directus_operations.user_created": string;
  /** @description twitterToken */
  "body.twitterToken": definitions["twitterToken"];
  /** Format: uuid */
  "rowFilter.twitterToken.user": string;
  /** Format: timestamp with time zone */
  "rowFilter.twitterToken.created_at": string;
  /** Format: character varying */
  "rowFilter.twitterToken.accessToken": string;
  /** Format: character varying */
  "rowFilter.twitterToken.refreshToken": string;
  /** Format: character varying */
  "rowFilter.twitterToken.twitter_id": string;
  /** Format: character varying */
  "rowFilter.twitterToken.twitter_name": string;
  /** Format: character varying */
  "rowFilter.twitterToken.twitter_username": string;
  /** Format: bigint */
  "rowFilter.twitterToken.id": string;
  /** @description discordToken */
  "body.discordToken": definitions["discordToken"];
  /** Format: bigint */
  "rowFilter.discordToken.id": string;
  /** Format: uuid */
  "rowFilter.discordToken.user_id": string;
  /** Format: bigint */
  "rowFilter.discordToken.influencer_id": string;
  /** Format: character varying */
  "rowFilter.discordToken.access_token": string;
  /** Format: character varying */
  "rowFilter.discordToken.expires_in": string;
  /** Format: character varying */
  "rowFilter.discordToken.refresh_token": string;
  /** Format: character varying */
  "rowFilter.discordToken.scope": string;
  /** Format: character varying */
  "rowFilter.discordToken.token_type": string;
  /** Format: character varying */
  "rowFilter.discordToken.discordId": string;
  /** Format: character varying */
  "rowFilter.discordToken.discordUsername": string;
  /** Format: character varying */
  "rowFilter.discordToken.discordDiscriminator": string;
  /** Format: timestamp with time zone */
  "rowFilter.discordToken.createdAt": string;
  /** Format: character varying */
  "rowFilter.discordToken.discordThumbnail": string;
  /** Format: integer */
  "rowFilter.discordToken.hourLimit": string;
  /** Format: timestamp with time zone */
  "rowFilter.discordToken.lastVisited": string;
  /** @description directus_activity */
  "body.directus_activity": definitions["directus_activity"];
  /** Format: integer */
  "rowFilter.directus_activity.id": string;
  /** Format: character varying */
  "rowFilter.directus_activity.action": string;
  /** Format: uuid */
  "rowFilter.directus_activity.user": string;
  /** Format: timestamp with time zone */
  "rowFilter.directus_activity.timestamp": string;
  /** Format: character varying */
  "rowFilter.directus_activity.ip": string;
  /** Format: character varying */
  "rowFilter.directus_activity.user_agent": string;
  /** Format: character varying */
  "rowFilter.directus_activity.collection": string;
  /** Format: character varying */
  "rowFilter.directus_activity.item": string;
  /** Format: text */
  "rowFilter.directus_activity.comment": string;
  /** Format: character varying */
  "rowFilter.directus_activity.origin": string;
  /** @description notifications */
  "body.notifications": definitions["notifications"];
  /** Format: bigint */
  "rowFilter.notifications.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.notifications.createdAt": string;
  /** Format: character varying */
  "rowFilter.notifications.title": string;
  /** Format: character varying */
  "rowFilter.notifications.body": string;
  /** Format: character varying */
  "rowFilter.notifications.avatar": string;
  /** Format: character varying */
  "rowFilter.notifications.link": string;
  /** Format: uuid */
  "rowFilter.notifications.user": string;
  /** Format: boolean */
  "rowFilter.notifications.read": string;
  /** @description raffles_with_influencer */
  "body.raffles_with_influencer": definitions["raffles_with_influencer"];
  /** Format: bigint */
  "rowFilter.raffles_with_influencer.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.raffles_with_influencer.createdAt": string;
  /** Format: bigint */
  "rowFilter.raffles_with_influencer.influencer": string;
  /** Format: boolean */
  "rowFilter.raffles_with_influencer.isPublished": string;
  /** @description influencerMetricHistories */
  "body.influencerMetricHistories": definitions["influencerMetricHistories"];
  /** Format: bigint */
  "rowFilter.influencerMetricHistories.id": string;
  /** Format: integer */
  "rowFilter.influencerMetricHistories.twitterFollowers": string;
  /** Format: integer */
  "rowFilter.influencerMetricHistories.discordMembers": string;
  /** Format: timestamp with time zone */
  "rowFilter.influencerMetricHistories.datetime": string;
  /** Format: integer */
  "rowFilter.influencerMetricHistories.discordPresenseMembers": string;
  /** Format: bigint */
  "rowFilter.influencerMetricHistories.influencer": string;
  /** @description raffles */
  "body.raffles": definitions["raffles"];
  /** Format: bigint */
  "rowFilter.raffles.id": string;
  /** Format: bigint */
  "rowFilter.raffles.project": string;
  /** Format: character varying */
  "rowFilter.raffles.name": string;
  /** Format: character varying */
  "rowFilter.raffles.thumbnail": string;
  /** Format: json */
  "rowFilter.raffles.rewards": string;
  /** Format: json */
  "rowFilter.raffles.conditions": string;
  /** Format: json */
  "rowFilter.raffles.results": string;
  /** Format: character varying */
  "rowFilter.raffles.url": string;
  /** Format: timestamp with time zone */
  "rowFilter.raffles.openDatetime": string;
  /** Format: timestamp with time zone */
  "rowFilter.raffles.closeDatetime": string;
  /** Format: timestamp with time zone */
  "rowFilter.raffles.createdAt": string;
  /** Format: character varying */
  "rowFilter.raffles.vender": string;
  /** Format: boolean */
  "rowFilter.raffles.isRaffleOriginal": string;
  /** Format: boolean */
  "rowFilter.raffles.isEnded": string;
  /** Format: text */
  "rowFilter.raffles.description": string;
  /** Format: character varying */
  "rowFilter.raffles.type": string;
  /** Format: integer */
  "rowFilter.raffles.duration": string;
  /** Format: bigint */
  "rowFilter.raffles.influencer": string;
  /** Format: character varying */
  "rowFilter.raffles.tweetUrl": string;
  /** Format: boolean */
  "rowFilter.raffles.getTelegramName": string;
  /** Format: boolean */
  "rowFilter.raffles.getTwitterName": string;
  /** Format: boolean */
  "rowFilter.raffles.getDiscordName": string;
  /** Format: boolean */
  "rowFilter.raffles.getWalletAddress": string;
  /** Format: json */
  "rowFilter.raffles.others": string;
  /** Format: text */
  "rowFilter.raffles.resultContent": string;
  /** Format: boolean */
  "rowFilter.raffles.isPublished": string;
  /** Format: boolean */
  "rowFilter.raffles.showGetDiscordName": string;
  /** Format: boolean */
  "rowFilter.raffles.showGetTelegramName": string;
  /** Format: boolean */
  "rowFilter.raffles.showGetTwitterName": string;
  /** Format: boolean */
  "rowFilter.raffles.showGetWalletAddress": string;
  /** Format: character varying */
  "rowFilter.raffles.walletType": string;
  /** Format: json */
  "rowFilter.raffles.additionalForms": string;
  /** Format: text */
  "rowFilter.raffles.submitDescription": string;
  /** Format: boolean */
  "rowFilter.raffles.isDescriptionHtml": string;
  /** Format: text */
  "rowFilter.raffles.description_ko": string;
  /** Format: json */
  "rowFilter.raffles.tweetMedia": string;
  /** Format: boolean */
  "rowFilter.raffles.isTest": string;
  /** Format: text */
  "rowFilter.raffles.savedTweet": string;
  /** Format: timestamp with time zone */
  "rowFilter.raffles.reservedTweetDatetime": string;
  /** Format: boolean */
  "rowFilter.raffles.tweetPublished": string;
  /** Format: text */
  "rowFilter.raffles.submitDescription_ko": string;
  /** Format: text */
  "rowFilter.raffles.resultContent_ko": string;
  /** Format: character varying */
  "rowFilter.raffles.name_ko": string;
  /** Format: boolean */
  "rowFilter.raffles.isDeleted": string;
  /** @description directus_notifications */
  "body.directus_notifications": definitions["directus_notifications"];
  /** Format: integer */
  "rowFilter.directus_notifications.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.directus_notifications.timestamp": string;
  /** Format: character varying */
  "rowFilter.directus_notifications.status": string;
  /** Format: uuid */
  "rowFilter.directus_notifications.recipient": string;
  /** Format: uuid */
  "rowFilter.directus_notifications.sender": string;
  /** Format: character varying */
  "rowFilter.directus_notifications.subject": string;
  /** Format: text */
  "rowFilter.directus_notifications.message": string;
  /** Format: character varying */
  "rowFilter.directus_notifications.collection": string;
  /** Format: character varying */
  "rowFilter.directus_notifications.item": string;
  /** @description directus_relations */
  "body.directus_relations": definitions["directus_relations"];
  /** Format: integer */
  "rowFilter.directus_relations.id": string;
  /** Format: character varying */
  "rowFilter.directus_relations.many_collection": string;
  /** Format: character varying */
  "rowFilter.directus_relations.many_field": string;
  /** Format: character varying */
  "rowFilter.directus_relations.one_collection": string;
  /** Format: character varying */
  "rowFilter.directus_relations.one_field": string;
  /** Format: character varying */
  "rowFilter.directus_relations.one_collection_field": string;
  /** Format: text */
  "rowFilter.directus_relations.one_allowed_collections": string;
  /** Format: character varying */
  "rowFilter.directus_relations.junction_field": string;
  /** Format: character varying */
  "rowFilter.directus_relations.sort_field": string;
  /** Format: character varying */
  "rowFilter.directus_relations.one_deselect_action": string;
  /** @description pushKeys */
  "body.pushKeys": definitions["pushKeys"];
  /** Format: character varying */
  "rowFilter.pushKeys.key": string;
  /** Format: timestamp with time zone */
  "rowFilter.pushKeys.createdAt": string;
  /** Format: json */
  "rowFilter.pushKeys.device": string;
  /** Format: uuid */
  "rowFilter.pushKeys.user": string;
  /** @description raffles_with_socialmetrics */
  "body.raffles_with_socialmetrics": definitions["raffles_with_socialmetrics"];
  /** Format: bigint */
  "rowFilter.raffles_with_socialmetrics.id": string;
  /** Format: bigint */
  "rowFilter.raffles_with_socialmetrics.project": string;
  /** Format: character varying */
  "rowFilter.raffles_with_socialmetrics.name": string;
  /** Format: character varying */
  "rowFilter.raffles_with_socialmetrics.thumbnail": string;
  /** Format: json */
  "rowFilter.raffles_with_socialmetrics.rewards": string;
  /** Format: json */
  "rowFilter.raffles_with_socialmetrics.conditions": string;
  /** Format: json */
  "rowFilter.raffles_with_socialmetrics.results": string;
  /** Format: character varying */
  "rowFilter.raffles_with_socialmetrics.url": string;
  /** Format: timestamp with time zone */
  "rowFilter.raffles_with_socialmetrics.openDatetime": string;
  /** Format: timestamp with time zone */
  "rowFilter.raffles_with_socialmetrics.closeDatetime": string;
  /** Format: timestamp with time zone */
  "rowFilter.raffles_with_socialmetrics.createdAt": string;
  /** Format: character varying */
  "rowFilter.raffles_with_socialmetrics.vender": string;
  /** Format: boolean */
  "rowFilter.raffles_with_socialmetrics.isRaffleOriginal": string;
  /** Format: boolean */
  "rowFilter.raffles_with_socialmetrics.isEnded": string;
  /** Format: text */
  "rowFilter.raffles_with_socialmetrics.description": string;
  /** Format: character varying */
  "rowFilter.raffles_with_socialmetrics.type": string;
  /** Format: integer */
  "rowFilter.raffles_with_socialmetrics.duration": string;
  /** Format: bigint */
  "rowFilter.raffles_with_socialmetrics.influencer": string;
  /** Format: character varying */
  "rowFilter.raffles_with_socialmetrics.tweetUrl": string;
  /** Format: boolean */
  "rowFilter.raffles_with_socialmetrics.getTelegramName": string;
  /** Format: boolean */
  "rowFilter.raffles_with_socialmetrics.getTwitterName": string;
  /** Format: boolean */
  "rowFilter.raffles_with_socialmetrics.getDiscordName": string;
  /** Format: boolean */
  "rowFilter.raffles_with_socialmetrics.getWalletAddress": string;
  /** Format: json */
  "rowFilter.raffles_with_socialmetrics.others": string;
  /** Format: text */
  "rowFilter.raffles_with_socialmetrics.resultContent": string;
  /** Format: boolean */
  "rowFilter.raffles_with_socialmetrics.isPublished": string;
  /** Format: boolean */
  "rowFilter.raffles_with_socialmetrics.showGetDiscordName": string;
  /** Format: boolean */
  "rowFilter.raffles_with_socialmetrics.showGetTelegramName": string;
  /** Format: boolean */
  "rowFilter.raffles_with_socialmetrics.showGetTwitterName": string;
  /** Format: boolean */
  "rowFilter.raffles_with_socialmetrics.showGetWalletAddress": string;
  /** Format: character varying */
  "rowFilter.raffles_with_socialmetrics.walletType": string;
  /** Format: json */
  "rowFilter.raffles_with_socialmetrics.additionalForms": string;
  /** Format: text */
  "rowFilter.raffles_with_socialmetrics.submitDescription": string;
  /** Format: boolean */
  "rowFilter.raffles_with_socialmetrics.isDescriptionHtml": string;
  /** Format: text */
  "rowFilter.raffles_with_socialmetrics.description_ko": string;
  /** Format: json */
  "rowFilter.raffles_with_socialmetrics.tweetMedia": string;
  /** Format: boolean */
  "rowFilter.raffles_with_socialmetrics.isTest": string;
  /** Format: text */
  "rowFilter.raffles_with_socialmetrics.savedTweet": string;
  /** Format: timestamp with time zone */
  "rowFilter.raffles_with_socialmetrics.reservedTweetDatetime": string;
  /** Format: boolean */
  "rowFilter.raffles_with_socialmetrics.tweetPublished": string;
  /** Format: text */
  "rowFilter.raffles_with_socialmetrics.submitDescription_ko": string;
  /** Format: text */
  "rowFilter.raffles_with_socialmetrics.resultContent_ko": string;
  /** Format: character varying */
  "rowFilter.raffles_with_socialmetrics.name_ko": string;
  /** Format: boolean */
  "rowFilter.raffles_with_socialmetrics.isDeleted": string;
  /** Format: bigint */
  "rowFilter.raffles_with_socialmetrics.twitterFollowers": string;
  /** Format: bigint */
  "rowFilter.raffles_with_socialmetrics.twitterFollowersChange": string;
  /** Format: bigint */
  "rowFilter.raffles_with_socialmetrics.discordMembers": string;
  /** Format: bigint */
  "rowFilter.raffles_with_socialmetrics.discordMembersChange": string;
  /** Format: bigint */
  "rowFilter.raffles_with_socialmetrics.discordPresenseMembers": string;
  /** Format: bigint */
  "rowFilter.raffles_with_socialmetrics.discordPresenseMembersChange": string;
  /** Format: json */
  "rowFilter.raffles_with_socialmetrics.socialMetrics": string;
  /** Format: json */
  "rowFilter.raffles_with_socialmetrics.socialMetricsChanges": string;
  /** @description directus_folders */
  "body.directus_folders": definitions["directus_folders"];
  /** Format: uuid */
  "rowFilter.directus_folders.id": string;
  /** Format: character varying */
  "rowFilter.directus_folders.name": string;
  /** Format: uuid */
  "rowFilter.directus_folders.parent": string;
  /** @description directus_users */
  "body.directus_users": definitions["directus_users"];
  /** Format: uuid */
  "rowFilter.directus_users.id": string;
  /** Format: character varying */
  "rowFilter.directus_users.first_name": string;
  /** Format: character varying */
  "rowFilter.directus_users.last_name": string;
  /** Format: character varying */
  "rowFilter.directus_users.email": string;
  /** Format: character varying */
  "rowFilter.directus_users.password": string;
  /** Format: character varying */
  "rowFilter.directus_users.location": string;
  /** Format: character varying */
  "rowFilter.directus_users.title": string;
  /** Format: text */
  "rowFilter.directus_users.description": string;
  /** Format: json */
  "rowFilter.directus_users.tags": string;
  /** Format: uuid */
  "rowFilter.directus_users.avatar": string;
  /** Format: character varying */
  "rowFilter.directus_users.language": string;
  /** Format: character varying */
  "rowFilter.directus_users.theme": string;
  /** Format: character varying */
  "rowFilter.directus_users.tfa_secret": string;
  /** Format: character varying */
  "rowFilter.directus_users.status": string;
  /** Format: uuid */
  "rowFilter.directus_users.role": string;
  /** Format: character varying */
  "rowFilter.directus_users.token": string;
  /** Format: timestamp with time zone */
  "rowFilter.directus_users.last_access": string;
  /** Format: character varying */
  "rowFilter.directus_users.last_page": string;
  /** Format: character varying */
  "rowFilter.directus_users.provider": string;
  /** Format: character varying */
  "rowFilter.directus_users.external_identifier": string;
  /** Format: json */
  "rowFilter.directus_users.auth_data": string;
  /** Format: boolean */
  "rowFilter.directus_users.email_notifications": string;
  /** @description tempForTwitterAuth */
  "body.tempForTwitterAuth": definitions["tempForTwitterAuth"];
  /** Format: character varying */
  "rowFilter.tempForTwitterAuth.id": string;
  /** Format: json */
  "rowFilter.tempForTwitterAuth.data": string;
  /** @description directus_files */
  "body.directus_files": definitions["directus_files"];
  /** Format: uuid */
  "rowFilter.directus_files.id": string;
  /** Format: character varying */
  "rowFilter.directus_files.storage": string;
  /** Format: character varying */
  "rowFilter.directus_files.filename_disk": string;
  /** Format: character varying */
  "rowFilter.directus_files.filename_download": string;
  /** Format: character varying */
  "rowFilter.directus_files.title": string;
  /** Format: character varying */
  "rowFilter.directus_files.type": string;
  /** Format: uuid */
  "rowFilter.directus_files.folder": string;
  /** Format: uuid */
  "rowFilter.directus_files.uploaded_by": string;
  /** Format: timestamp with time zone */
  "rowFilter.directus_files.uploaded_on": string;
  /** Format: uuid */
  "rowFilter.directus_files.modified_by": string;
  /** Format: timestamp with time zone */
  "rowFilter.directus_files.modified_on": string;
  /** Format: character varying */
  "rowFilter.directus_files.charset": string;
  /** Format: bigint */
  "rowFilter.directus_files.filesize": string;
  /** Format: integer */
  "rowFilter.directus_files.width": string;
  /** Format: integer */
  "rowFilter.directus_files.height": string;
  /** Format: integer */
  "rowFilter.directus_files.duration": string;
  /** Format: character varying */
  "rowFilter.directus_files.embed": string;
  /** Format: text */
  "rowFilter.directus_files.description": string;
  /** Format: text */
  "rowFilter.directus_files.location": string;
  /** Format: text */
  "rowFilter.directus_files.tags": string;
  /** Format: json */
  "rowFilter.directus_files.metadata": string;
}

export interface operations {}

export interface external {}
